apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-autoscaler
  namespace: kube-system
  labels:
    app.kubernetes.io/name: cluster-autoscaler
    app.kubernetes.io/instance: cluster-autoscaler
    app.kubernetes.io/part-of: cluster-autoscaler
    app.kubernetes.io/component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cluster-autoscaler
      app.kubernetes.io/instance: cluster-autoscaler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cluster-autoscaler
        app.kubernetes.io/instance: cluster-autoscaler
        app.kubernetes.io/part-of: cluster-autoscaler
        app.kubernetes.io/component: controller
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    spec:
      serviceAccountName: cluster-autoscaler
      priorityClassName: system-cluster-critical
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      containers:
        - name: cluster-autoscaler
          image: registry.k8s.io/autoscaling/cluster-autoscaler:v1.29.0
          imagePullPolicy: IfNotPresent
          command:
            - ./cluster-autoscaler
          args:
            - --cloud-provider=gce
            - --namespace=$(POD_NAMESPACE)
            - --cluster-name=$(CLUSTER_NAME)
            - --node-group-auto-discovery=$(NODE_GROUP_AUTO_DISCOVERY)
            - --max-nodes-total=$(MAX_NODES_TOTAL)
            - --scale-down-delay-after-add=$(SCALE_DOWN_DELAY_AFTER_ADD)
            - --scale-down-unneeded-time=$(SCALE_DOWN_UNNEEDED_TIME)
            - --scan-interval=$(SCAN_INTERVAL)
            - --balance-similar-node-groups=true
            - --skip-nodes-with-local-storage=false
            - --skip-nodes-with-system-pods=false
            - --expander=least-waste
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: cluster-autoscaler-settings
                  key: cluster-name
            - name: NODE_GROUP_AUTO_DISCOVERY
              valueFrom:
                configMapKeyRef:
                  name: cluster-autoscaler-settings
                  key: node-group-auto-discovery
            - name: MAX_NODES_TOTAL
              valueFrom:
                configMapKeyRef:
                  name: cluster-autoscaler-settings
                  key: max-nodes-total
            - name: SCALE_DOWN_DELAY_AFTER_ADD
              valueFrom:
                configMapKeyRef:
                  name: cluster-autoscaler-settings
                  key: scale-down-delay-after-add
            - name: SCALE_DOWN_UNNEEDED_TIME
              valueFrom:
                configMapKeyRef:
                  name: cluster-autoscaler-settings
                  key: scale-down-unneeded-time
            - name: SCAN_INTERVAL
              valueFrom:
                configMapKeyRef:
                  name: cluster-autoscaler-settings
                  key: scan-interval
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 600Mi
          livenessProbe:
            httpGet:
              path: /health-check
              port: 8085
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health-check
              port: 8085
            initialDelaySeconds: 30
            periodSeconds: 10
      nodeSelector:
        kubernetes.io/os: linux
