2021-10-02T18:33:16.758+0100 [DEBUG] Adding temp file log sink: /tmp/terraform-log933902340
2021-10-02T18:33:16.759+0100 [INFO]  Terraform version: 1.0.8
2021-10-02T18:33:16.759+0100 [INFO]  Go runtime version: go1.16.4
2021-10-02T18:33:16.760+0100 [INFO]  CLI args: []string{"/usr/bin/terraform", "refresh"}
2021-10-02T18:33:16.760+0100 [TRACE] Stdout is a terminal of width 134
2021-10-02T18:33:16.760+0100 [TRACE] Stderr is a terminal of width 134
2021-10-02T18:33:16.761+0100 [TRACE] Stdin is a terminal
2021-10-02T18:33:16.761+0100 [DEBUG] Attempting to open CLI config file: /home/servernet/.terraformrc
2021-10-02T18:33:16.761+0100 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021-10-02T18:33:16.762+0100 [INFO]  Loading CLI configuration from /home/servernet/.terraform.d/credentials.tfrc.json
2021-10-02T18:33:16.764+0100 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021-10-02T18:33:16.765+0100 [DEBUG] ignoring non-existing provider search directory /home/servernet/.terraform.d/plugins
2021-10-02T18:33:16.765+0100 [DEBUG] ignoring non-existing provider search directory /home/servernet/.local/share/terraform/plugins
2021-10-02T18:33:16.765+0100 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2021-10-02T18:33:16.765+0100 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2021-10-02T18:33:16.766+0100 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2021-10-02T18:33:16.767+0100 [INFO]  CLI command args: []string{"refresh"}
2021-10-02T18:33:16.792+0100 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021-10-02T18:33:16.793+0100 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021-10-02T18:33:16.793+0100 [DEBUG] New state was assigned lineage "e8390400-423c-470d-8dca-cbff9f5ddeac"
2021-10-02T18:33:16.793+0100 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021-10-02T18:33:16.793+0100 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021-10-02T18:33:16.796+0100 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021-10-02T18:33:16.830+0100 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/aws v3.61.0 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64
2021-10-02T18:33:16.859+0100 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/http v2.1.0 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64
2021-10-02T18:33:16.865+0100 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/aws 3.61.0
2021-10-02T18:33:16.865+0100 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/http 2.1.0
2021-10-02T18:33:18.660+0100 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers
2021-10-02T18:33:18.794+0100 [DEBUG] checking for provisioner in "."
2021-10-02T18:33:18.797+0100 [DEBUG] checking for provisioner in "/usr/bin"
2021-10-02T18:33:18.805+0100 [INFO]  Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2021-10-02T18:33:18.805+0100 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021-10-02T18:33:18.818+0100 [TRACE] backend/local: requesting state manager for workspace "default"
2021-10-02T18:33:18.818+0100 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021-10-02T18:33:18.818+0100 [TRACE] backend/local: requesting state lock for workspace "default"
2021-10-02T18:33:18.818+0100 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021-10-02T18:33:18.822+0100 [TRACE] statemgr.Filesystem: existing snapshot has lineage "2c8beddc-2735-c577-f661-126424add961" serial 24
2021-10-02T18:33:18.822+0100 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021-10-02T18:33:18.822+0100 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021-10-02T18:33:18.824+0100 [TRACE] backend/local: reading remote state for workspace "default"
2021-10-02T18:33:18.824+0100 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021-10-02T18:33:18.826+0100 [TRACE] statemgr.Filesystem: read snapshot with lineage "2c8beddc-2735-c577-f661-126424add961" serial 24
2021-10-02T18:33:18.826+0100 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021-10-02T18:33:18.827+0100 [TRACE] backend/local: building context for current working directory
2021-10-02T18:33:18.844+0100 [TRACE] terraform.NewContext: starting
2021-10-02T18:33:18.844+0100 [TRACE] terraform.NewContext: loading provider schemas
2021-10-02T18:33:18.845+0100 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/aws"
2021-10-02T18:33:18.848+0100 [DEBUG] created provider logger: level=trace
2021-10-02T18:33:18.849+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:33:18.886+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5]
2021-10-02T18:33:18.897+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=7962
2021-10-02T18:33:18.897+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5
2021-10-02T18:33:21.744+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:33:21.737+0100
2021-10-02T18:33:21.824+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:33:21.824+0100 [DEBUG] provider.terraform-provider-aws_v3.61.0_x5: plugin address: address=/tmp/plugin676477337 network=unix timestamp=2021-10-02T18:33:21.823+0100
2021-10-02T18:33:21.882+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-10-02T18:33:21.882+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:33:22.040+0100 [TRACE] GRPCProvider: Close
2021-10-02T18:33:22.041+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:33:22.051+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=7962
2021-10-02T18:33:22.052+0100 [DEBUG] provider: plugin exited
2021-10-02T18:33:22.052+0100 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/http"
2021-10-02T18:33:22.059+0100 [DEBUG] created provider logger: level=trace
2021-10-02T18:33:22.059+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:33:22.095+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5]
2021-10-02T18:33:22.106+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=7976
2021-10-02T18:33:22.106+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5
2021-10-02T18:33:22.502+0100 [INFO]  provider.terraform-provider-http_v2.1.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:33:22.502+0100
2021-10-02T18:33:22.560+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:33:22.560+0100 [DEBUG] provider.terraform-provider-http_v2.1.0_x5: plugin address: address=/tmp/plugin670045699 network=unix timestamp=2021-10-02T18:33:22.559+0100
2021-10-02T18:33:22.615+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-10-02T18:33:22.615+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:33:22.624+0100 [TRACE] GRPCProvider: Close
2021-10-02T18:33:22.624+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:33:22.626+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=7976
2021-10-02T18:33:22.627+0100 [DEBUG] provider: plugin exited
2021-10-02T18:33:22.627+0100 [TRACE] terraform.NewContext: complete
2021-10-02T18:33:22.627+0100 [TRACE] backend/local: finished building terraform.Context
2021-10-02T18:33:22.627+0100 [TRACE] backend/local: requesting interactive input, if necessary
2021-10-02T18:33:22.627+0100 [TRACE] Context.Input: Prompting for provider arguments
2021-10-02T18:33:22.628+0100 [TRACE] Context.Input: Provider provider.aws declared at main.tf:11,1-15
2021-10-02T18:33:22.628+0100 [TRACE] Context.Input: Provider provider.http implied by data block at main.tf:33,1-19
2021-10-02T18:33:22.628+0100 [TRACE] Context.Input: Input for provider.aws: map[string]cty.Value{}
2021-10-02T18:33:22.628+0100 [TRACE] Context.Input: Input for provider.http: map[string]cty.Value{}
2021-10-02T18:33:22.628+0100 [TRACE] backend/local: running validation operation
2021-10-02T18:33:22.628+0100 [INFO]  terraform: building graph: GraphTypeValidate
2021-10-02T18:33:22.629+0100 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021-10-02T18:33:22.629+0100 [TRACE] ConfigTransformer: Starting for path:
2021-10-02T18:33:22.629+0100 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
  data.http.myip - *terraform.NodeValidatableResource
  ------
2021-10-02T18:33:22.629+0100 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021-10-02T18:33:22.629+0100 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
  data.http.myip - *terraform.NodeValidatableResource
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:22.629+0100 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021-10-02T18:33:22.629+0100 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021-10-02T18:33:22.630+0100 [TRACE] Executing graph transform *terraform.LocalTransformer
2021-10-02T18:33:22.630+0100 [TRACE] Completed graph transform *terraform.LocalTransformer with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
  data.http.myip - *terraform.NodeValidatableResource
  local.security_groups (expand) - *terraform.nodeExpandLocal
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:22.630+0100 [TRACE] Executing graph transform *terraform.OutputTransformer
2021-10-02T18:33:22.630+0100 [TRACE] OutputTransformer: adding instance_public_ip as *terraform.NodeApplyableOutput
2021-10-02T18:33:22.630+0100 [TRACE] OutputTransformer: adding instance_name as *terraform.NodeApplyableOutput
2021-10-02T18:33:22.630+0100 [TRACE] OutputTransformer: adding instance_id as *terraform.NodeApplyableOutput
2021-10-02T18:33:22.630+0100 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
  data.http.myip - *terraform.NodeValidatableResource
  local.security_groups (expand) - *terraform.nodeExpandLocal
  output.instance_id - *terraform.NodeApplyableOutput
  output.instance_name - *terraform.NodeApplyableOutput
  output.instance_public_ip - *terraform.NodeApplyableOutput
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:22.631+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021-10-02T18:33:22.631+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021-10-02T18:33:22.631+0100 [TRACE] Executing graph transform *terraform.StateTransformer
2021-10-02T18:33:22.631+0100 [TRACE] StateTransformer: state is empty, so nothing to do
2021-10-02T18:33:22.631+0100 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021-10-02T18:33:22.631+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-10-02T18:33:22.632+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-10-02T18:33:22.632+0100 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021-10-02T18:33:22.632+0100 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021-10-02T18:33:22.632+0100 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021-10-02T18:33:22.632+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group_rule.allow_localhost_8080" (*terraform.NodeValidatableResource) config from main.tf:83,1-58
2021-10-02T18:33:22.632+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:22.632+0100 [TRACE] AttachResourceConfigTransformer: attaching to "data.http.myip" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:33, Column:1, Byte:599}, End:hcl.Pos{Line:33, Column:19, Byte:617}}
2021-10-02T18:33:22.633+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.http.myip
2021-10-02T18:33:22.633+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sg_ping" (*terraform.NodeValidatableResource) config from main.tf:60,1-40
2021-10-02T18:33:22.633+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sg_ping
2021-10-02T18:33:22.633+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sg_8080" (*terraform.NodeValidatableResource) config from main.tf:71,1-40
2021-10-02T18:33:22.633+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sg_8080
2021-10-02T18:33:22.633+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group_rule.allow_ping" (*terraform.NodeValidatableResource) config from main.tf:100,1-48
2021-10-02T18:33:22.633+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group_rule.allow_ping
2021-10-02T18:33:22.634+0100 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.ubuntu" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:17, Column:1, Byte:311}, End:hcl.Pos{Line:17, Column:24, Byte:334}}
2021-10-02T18:33:22.634+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_ami.ubuntu
2021-10-02T18:33:22.634+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.web_app" (*terraform.NodeValidatableResource) config from main.tf:45,1-34
2021-10-02T18:33:22.634+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.web_app
2021-10-02T18:33:22.634+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group_rule.allow_localhost_ping" (*terraform.NodeValidatableResource) config from main.tf:92,1-58
2021-10-02T18:33:22.634+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:22.634+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group_rule.allow_8080" (*terraform.NodeValidatableResource) config from main.tf:109,1-48
2021-10-02T18:33:22.635+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group_rule.allow_8080
2021-10-02T18:33:22.635+0100 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021-10-02T18:33:22.635+0100 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021-10-02T18:33:22.635+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021-10-02T18:33:22.635+0100 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/aws\"]" provider configuration from main.tf:11,1-15
2021-10-02T18:33:22.635+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
  data.http.myip - *terraform.NodeValidatableResource
  local.security_groups (expand) - *terraform.nodeExpandLocal
  output.instance_id - *terraform.NodeApplyableOutput
  output.instance_name - *terraform.NodeApplyableOutput
  output.instance_public_ip - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:22.635+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021-10-02T18:33:22.636+0100 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/http"], implied first by data.http.myip
2021-10-02T18:33:22.636+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
  data.http.myip - *terraform.NodeValidatableResource
  local.security_groups (expand) - *terraform.nodeExpandLocal
  output.instance_id - *terraform.NodeApplyableOutput
  output.instance_name - *terraform.NodeApplyableOutput
  output.instance_public_ip - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:22.636+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021-10-02T18:33:22.636+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:22.636+0100 [DEBUG] ProviderTransformer: "aws_security_group_rule.allow_localhost_8080" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:22.636+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group_rule.allow_ping
2021-10-02T18:33:22.637+0100 [DEBUG] ProviderTransformer: "aws_security_group_rule.allow_ping" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:22.637+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_ami.ubuntu
2021-10-02T18:33:22.637+0100 [DEBUG] ProviderTransformer: "data.aws_ami.ubuntu" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:22.637+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.web_app
2021-10-02T18:33:22.637+0100 [DEBUG] ProviderTransformer: "aws_instance.web_app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:22.637+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/http"] serving data.http.myip
2021-10-02T18:33:22.637+0100 [DEBUG] ProviderTransformer: "data.http.myip" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/http"]
2021-10-02T18:33:22.638+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sg_ping
2021-10-02T18:33:22.638+0100 [DEBUG] ProviderTransformer: "aws_security_group.sg_ping" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:22.638+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sg_8080
2021-10-02T18:33:22.638+0100 [DEBUG] ProviderTransformer: "aws_security_group.sg_8080" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:22.638+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:22.638+0100 [DEBUG] ProviderTransformer: "aws_security_group_rule.allow_localhost_ping" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:22.638+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group_rule.allow_8080
2021-10-02T18:33:22.639+0100 [DEBUG] ProviderTransformer: "aws_security_group_rule.allow_8080" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:22.639+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
  output.instance_id - *terraform.NodeApplyableOutput
  output.instance_name - *terraform.NodeApplyableOutput
  output.instance_public_ip - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:22.639+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021-10-02T18:33:22.639+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021-10-02T18:33:22.639+0100 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
  output.instance_id - *terraform.NodeApplyableOutput
  output.instance_name - *terraform.NodeApplyableOutput
  output.instance_public_ip - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:22.639+0100 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021-10-02T18:33:22.640+0100 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021-10-02T18:33:22.640+0100 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021-10-02T18:33:22.640+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.web_app
2021-10-02T18:33:22.640+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:22.640+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group_rule.allow_8080
2021-10-02T18:33:22.640+0100 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:22.641+0100 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/http"]
2021-10-02T18:33:22.641+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:22.641+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to data.http.myip
2021-10-02T18:33:22.641+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sg_ping
2021-10-02T18:33:22.641+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sg_8080
2021-10-02T18:33:22.641+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group_rule.allow_ping
2021-10-02T18:33:22.641+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.ubuntu
2021-10-02T18:33:22.642+0100 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021-10-02T18:33:22.642+0100 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021-10-02T18:33:22.642+0100 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021-10-02T18:33:22.642+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-10-02T18:33:22.642+0100 [DEBUG] ReferenceTransformer: "aws_security_group.sg_8080" references: []
2021-10-02T18:33:22.642+0100 [DEBUG] ReferenceTransformer: "aws_security_group_rule.allow_ping" references: [aws_security_group.sg_ping aws_security_group.sg_8080]
2021-10-02T18:33:22.643+0100 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntu" references: []
2021-10-02T18:33:22.643+0100 [DEBUG] ReferenceTransformer: "local.security_groups (expand)" references: [aws_security_group.sg_ping aws_security_group.sg_8080]
2021-10-02T18:33:22.643+0100 [DEBUG] ReferenceTransformer: "output.instance_public_ip" references: [aws_instance.web_app]
2021-10-02T18:33:22.643+0100 [DEBUG] ReferenceTransformer: "output.instance_id" references: [aws_instance.web_app]
2021-10-02T18:33:22.643+0100 [DEBUG] ReferenceTransformer: "aws_security_group.sg_ping" references: []
2021-10-02T18:33:22.643+0100 [DEBUG] ReferenceTransformer: "aws_security_group_rule.allow_localhost_ping" references: [aws_security_group.sg_ping data.http.myip]
2021-10-02T18:33:22.644+0100 [DEBUG] ReferenceTransformer: "aws_security_group_rule.allow_8080" references: [aws_security_group.sg_8080 aws_security_group.sg_ping]
2021-10-02T18:33:22.644+0100 [DEBUG] ReferenceTransformer: "var.region" references: []
2021-10-02T18:33:22.644+0100 [DEBUG] ReferenceTransformer: "output.instance_name" references: [aws_instance.web_app]
2021-10-02T18:33:22.644+0100 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/aws\"]" references: [var.region]
2021-10-02T18:33:22.644+0100 [INFO]  ReferenceTransformer: reference not found: "each.value"
2021-10-02T18:33:22.644+0100 [DEBUG] ReferenceTransformer: "aws_instance.web_app" references: [local.security_groups (expand) var.name data.aws_ami.ubuntu]
2021-10-02T18:33:22.645+0100 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/http\"]" references: []
2021-10-02T18:33:22.645+0100 [DEBUG] ReferenceTransformer: "data.http.myip" references: []
2021-10-02T18:33:22.645+0100 [DEBUG] ReferenceTransformer: "var.name" references: []
2021-10-02T18:33:22.645+0100 [DEBUG] ReferenceTransformer: "aws_security_group_rule.allow_localhost_8080" references: [data.http.myip aws_security_group.sg_8080]
2021-10-02T18:33:22.645+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
  output.instance_id - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  output.instance_name - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  output.instance_public_ip - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:22.645+0100 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021-10-02T18:33:22.646+0100 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021-10-02T18:33:22.646+0100 [TRACE] Executing graph transform *terraform.attachDataResourceDependsOnTransformer
2021-10-02T18:33:22.646+0100 [TRACE] attachDataDependenciesTransformer: data.aws_ami.ubuntu depends on []
2021-10-02T18:33:22.646+0100 [TRACE] attachDataDependenciesTransformer: data.http.myip depends on []
2021-10-02T18:33:22.646+0100 [TRACE] Completed graph transform *terraform.attachDataResourceDependsOnTransformer (no changes)
2021-10-02T18:33:22.646+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-10-02T18:33:22.647+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-10-02T18:33:22.647+0100 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021-10-02T18:33:22.647+0100 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021-10-02T18:33:22.647+0100 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021-10-02T18:33:22.647+0100 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_instance.web_app - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    output.instance_id - *terraform.NodeApplyableOutput
    output.instance_name - *terraform.NodeApplyableOutput
    output.instance_public_ip - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.instance_id - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  output.instance_name - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  output.instance_public_ip - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:22.648+0100 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021-10-02T18:33:22.648+0100 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_instance.web_app - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    output.instance_id - *terraform.NodeApplyableOutput
    output.instance_name - *terraform.NodeApplyableOutput
    output.instance_public_ip - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.instance_id - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  output.instance_name - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  output.instance_public_ip - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_instance.web_app - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] (close) - *terraform.graphNodeCloseProvider
    data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:22.648+0100 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021-10-02T18:33:22.648+0100 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_instance.web_app - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    output.instance_id - *terraform.NodeApplyableOutput
    output.instance_name - *terraform.NodeApplyableOutput
    output.instance_public_ip - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.instance_id - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  output.instance_name - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  output.instance_public_ip - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_instance.web_app - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] (close) - *terraform.graphNodeCloseProvider
    data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/http"] (close) - *terraform.graphNodeCloseProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:22.649+0100 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021-10-02T18:33:22.649+0100 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_instance.web_app - *terraform.NodeValidatableResource
    data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    var.name - *terraform.NodeRootVariable
  aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
    data.http.myip - *terraform.NodeValidatableResource
  aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
  data.aws_ami.ubuntu - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
    aws_security_group.sg_8080 - *terraform.NodeValidatableResource
    aws_security_group.sg_ping - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
    output.instance_id - *terraform.NodeApplyableOutput
    output.instance_name - *terraform.NodeApplyableOutput
    output.instance_public_ip - *terraform.NodeApplyableOutput
  output.instance_id - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  output.instance_name - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  output.instance_public_ip - *terraform.NodeApplyableOutput
    aws_instance.web_app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_instance.web_app - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_8080 - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_localhost_ping - *terraform.NodeValidatableResource
    aws_security_group_rule.allow_ping - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] (close) - *terraform.graphNodeCloseProvider
    data.http.myip - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/http"] (close) - *terraform.graphNodeCloseProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:22.649+0100 [DEBUG] Starting graph walk: walkValidate
2021-10-02T18:33:22.649+0100 [TRACE] vertex "var.name": starting visit (*terraform.NodeRootVariable)
2021-10-02T18:33:22.650+0100 [TRACE] vertex "var.name": visit complete
2021-10-02T18:33:22.650+0100 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2021-10-02T18:33:22.650+0100 [TRACE] vertex "var.region": visit complete
2021-10-02T18:33:22.650+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/http\"]": starting visit (*terraform.NodeApplyableProvider)
2021-10-02T18:33:22.650+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": starting visit (*terraform.NodeApplyableProvider)
2021-10-02T18:33:22.654+0100 [DEBUG] created provider logger: level=trace
2021-10-02T18:33:22.654+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:33:22.689+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5]
2021-10-02T18:33:22.699+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=7989
2021-10-02T18:33:22.699+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5
2021-10-02T18:33:23.018+0100 [INFO]  provider.terraform-provider-http_v2.1.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:33:23.018+0100
2021-10-02T18:33:23.095+0100 [DEBUG] provider.terraform-provider-http_v2.1.0_x5: plugin address: network=unix address=/tmp/plugin134467284 timestamp=2021-10-02T18:33:23.094+0100
2021-10-02T18:33:23.095+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:33:23.157+0100 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/http\"]" provider for provider["registry.terraform.io/hashicorp/http"]
2021-10-02T18:33:23.157+0100 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/http"]: no configuration at all
2021-10-02T18:33:23.157+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:33:23.159+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/http\"]": visit complete
2021-10-02T18:33:23.159+0100 [TRACE] vertex "data.http.myip": starting visit (*terraform.NodeValidatableResource)
2021-10-02T18:33:23.163+0100 [DEBUG] created provider logger: level=trace
2021-10-02T18:33:23.164+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:33:23.212+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5]
2021-10-02T18:33:23.220+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8002
2021-10-02T18:33:23.220+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5
2021-10-02T18:33:26.038+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:33:26.035+0100
2021-10-02T18:33:26.118+0100 [DEBUG] provider.terraform-provider-aws_v3.61.0_x5: plugin address: address=/tmp/plugin051789449 network=unix timestamp=2021-10-02T18:33:26.117+0100
2021-10-02T18:33:26.118+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:33:26.174+0100 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/aws\"]" provider for provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:26.174+0100 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/aws"]: using explicit config only
2021-10-02T18:33:26.175+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-10-02T18:33:26.175+0100 [TRACE] GRPCProvider: ValidateDataResourceConfig
2021-10-02T18:33:26.175+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-10-02T18:33:26.174+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:33:26.187+0100 [TRACE] vertex "data.http.myip": visit complete
2021-10-02T18:33:26.188+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/http\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021-10-02T18:33:26.188+0100 [TRACE] GRPCProvider: Close
2021-10-02T18:33:26.189+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:33:26.192+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=7989
2021-10-02T18:33:26.192+0100 [DEBUG] provider: plugin exited
2021-10-02T18:33:26.192+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/http\"] (close)": visit complete
2021-10-02T18:33:26.328+0100 [TRACE] GRPCProvider: ValidateProviderConfig
2021-10-02T18:33:26.429+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": visit complete
2021-10-02T18:33:26.429+0100 [TRACE] vertex "aws_security_group.sg_ping": starting visit (*terraform.NodeValidatableResource)
2021-10-02T18:33:26.430+0100 [TRACE] vertex "aws_security_group.sg_8080": starting visit (*terraform.NodeValidatableResource)
2021-10-02T18:33:26.430+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:26.430+0100 [TRACE] vertex "data.aws_ami.ubuntu": starting visit (*terraform.NodeValidatableResource)
2021-10-02T18:33:26.430+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:26.432+0100 [TRACE] GRPCProvider: ValidateDataResourceConfig
2021-10-02T18:33:26.432+0100 [TRACE] vertex "aws_security_group.sg_ping": visit complete
2021-10-02T18:33:26.432+0100 [TRACE] vertex "aws_security_group.sg_8080": visit complete
2021-10-02T18:33:26.433+0100 [TRACE] vertex "aws_security_group_rule.allow_8080": starting visit (*terraform.NodeValidatableResource)
2021-10-02T18:33:26.433+0100 [TRACE] vertex "aws_security_group_rule.allow_ping": starting visit (*terraform.NodeValidatableResource)
2021-10-02T18:33:26.433+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:26.434+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080": starting visit (*terraform.NodeValidatableResource)
2021-10-02T18:33:26.434+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:26.434+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping": starting visit (*terraform.NodeValidatableResource)
2021-10-02T18:33:26.435+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:26.435+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:26.435+0100 [TRACE] vertex "local.security_groups (expand)": starting visit (*terraform.nodeExpandLocal)
2021-10-02T18:33:26.436+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:26 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-10-02T18:33:26.436+0100
2021-10-02T18:33:26.436+0100 [TRACE] vertex "local.security_groups (expand)": expanding dynamic subgraph
2021-10-02T18:33:26.437+0100 [TRACE] vertex "aws_security_group_rule.allow_8080": visit complete
2021-10-02T18:33:26.438+0100 [TRACE] vertex "aws_security_group_rule.allow_ping": visit complete
2021-10-02T18:33:26.438+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080": visit complete
2021-10-02T18:33:26.439+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping": visit complete
2021-10-02T18:33:26.439+0100 [TRACE] vertex "data.aws_ami.ubuntu": visit complete
2021-10-02T18:33:26.440+0100 [TRACE] Expanding local: adding local.security_groups as *terraform.NodeLocal
2021-10-02T18:33:26.440+0100 [TRACE] vertex "local.security_groups (expand)": entering dynamic subgraph
2021-10-02T18:33:26.440+0100 [TRACE] vertex "local.security_groups": starting visit (*terraform.NodeLocal)
2021-10-02T18:33:26.441+0100 [TRACE] vertex "local.security_groups": visit complete
2021-10-02T18:33:26.441+0100 [TRACE] vertex "local.security_groups (expand)": dynamic subgraph completed successfully
2021-10-02T18:33:26.441+0100 [TRACE] vertex "local.security_groups (expand)": visit complete
2021-10-02T18:33:26.442+0100 [TRACE] vertex "aws_instance.web_app": starting visit (*terraform.NodeValidatableResource)
2021-10-02T18:33:26.442+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:26.444+0100 [TRACE] vertex "aws_instance.web_app": visit complete
2021-10-02T18:33:26.444+0100 [TRACE] vertex "output.instance_id": starting visit (*terraform.NodeApplyableOutput)
2021-10-02T18:33:26.444+0100 [TRACE] setValue: Saving Create change for output.instance_id in changeset
2021-10-02T18:33:26.445+0100 [TRACE] setValue: Removing output.instance_id from state (it is now null)
2021-10-02T18:33:26.445+0100 [TRACE] vertex "output.instance_id": visit complete
2021-10-02T18:33:26.445+0100 [TRACE] vertex "output.instance_public_ip": starting visit (*terraform.NodeApplyableOutput)
2021-10-02T18:33:26.445+0100 [TRACE] setValue: Saving Create change for output.instance_public_ip in changeset
2021-10-02T18:33:26.446+0100 [TRACE] vertex "output.instance_name": starting visit (*terraform.NodeApplyableOutput)
2021-10-02T18:33:26.446+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021-10-02T18:33:26.446+0100 [TRACE] setValue: Removing output.instance_public_ip from state (it is now null)
2021-10-02T18:33:26.446+0100 [TRACE] vertex "output.instance_public_ip": visit complete
2021-10-02T18:33:26.446+0100 [TRACE] setValue: Saving Create change for output.instance_name in changeset
2021-10-02T18:33:26.447+0100 [TRACE] setValue: Removing output.instance_name from state (it is now null)
2021-10-02T18:33:26.447+0100 [TRACE] vertex "output.instance_name": visit complete
2021-10-02T18:33:26.447+0100 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021-10-02T18:33:26.446+0100 [TRACE] GRPCProvider: Close
2021-10-02T18:33:26.447+0100 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-10-02T18:33:26.448+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:33:26.457+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8002
2021-10-02T18:33:26.457+0100 [DEBUG] provider: plugin exited
2021-10-02T18:33:26.458+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": visit complete
2021-10-02T18:33:26.458+0100 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021-10-02T18:33:26.459+0100 [TRACE] vertex "root": visit complete
2021-10-02T18:33:26.459+0100 [INFO]  terraform: building graph: GraphTypePlan
2021-10-02T18:33:26.459+0100 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021-10-02T18:33:26.460+0100 [TRACE] ConfigTransformer: Starting for path:
2021-10-02T18:33:26.460+0100 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
  ------
2021-10-02T18:33:26.460+0100 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021-10-02T18:33:26.461+0100 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:26.461+0100 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021-10-02T18:33:26.461+0100 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021-10-02T18:33:26.462+0100 [TRACE] Executing graph transform *terraform.LocalTransformer
2021-10-02T18:33:26.462+0100 [TRACE] Completed graph transform *terraform.LocalTransformer with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
  local.security_groups (expand) - *terraform.nodeExpandLocal
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:26.462+0100 [TRACE] Executing graph transform *terraform.OutputTransformer
2021-10-02T18:33:26.462+0100 [TRACE] OutputTransformer: adding instance_public_ip as *terraform.NodeApplyableOutput
2021-10-02T18:33:26.463+0100 [TRACE] OutputTransformer: adding instance_name as *terraform.NodeApplyableOutput
2021-10-02T18:33:26.463+0100 [TRACE] OutputTransformer: adding instance_id as *terraform.NodeApplyableOutput
2021-10-02T18:33:26.463+0100 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
  local.security_groups (expand) - *terraform.nodeExpandLocal
  output.instance_id - *terraform.NodeApplyableOutput
  output.instance_name - *terraform.NodeApplyableOutput
  output.instance_public_ip - *terraform.NodeApplyableOutput
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:26.463+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021-10-02T18:33:26.464+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021-10-02T18:33:26.464+0100 [TRACE] Executing graph transform *terraform.StateTransformer
2021-10-02T18:33:26.464+0100 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021-10-02T18:33:26.464+0100 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021-10-02T18:33:26.464+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-10-02T18:33:26.465+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-10-02T18:33:26.465+0100 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021-10-02T18:33:26.465+0100 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021-10-02T18:33:26.465+0100 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021-10-02T18:33:26.465+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group_rule.allow_localhost_8080 (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf:83,1-58
2021-10-02T18:33:26.466+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group_rule.allow_localhost_8080 (expand)
2021-10-02T18:33:26.466+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.web_app (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf:45,1-34
2021-10-02T18:33:26.466+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.web_app (expand)
2021-10-02T18:33:26.466+0100 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.ubuntu (expand)" (*terraform.nodeExpandPlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:17, Column:1, Byte:311}, End:hcl.Pos{Line:17, Column:24, Byte:334}}
2021-10-02T18:33:26.466+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_ami.ubuntu (expand)
2021-10-02T18:33:26.466+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group_rule.allow_localhost_ping (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf:92,1-58
2021-10-02T18:33:26.466+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group_rule.allow_localhost_ping (expand)
2021-10-02T18:33:26.467+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sg_8080 (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf:71,1-40
2021-10-02T18:33:26.467+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sg_8080 (expand)
2021-10-02T18:33:26.467+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group_rule.allow_8080 (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf:109,1-48
2021-10-02T18:33:26.467+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group_rule.allow_8080 (expand)
2021-10-02T18:33:26.467+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sg_ping (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf:60,1-40
2021-10-02T18:33:26.467+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sg_ping (expand)
2021-10-02T18:33:26.467+0100 [TRACE] AttachResourceConfigTransformer: attaching to "data.http.myip (expand)" (*terraform.nodeExpandPlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:33, Column:1, Byte:599}, End:hcl.Pos{Line:33, Column:19, Byte:617}}
2021-10-02T18:33:26.468+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.http.myip (expand)
2021-10-02T18:33:26.468+0100 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group_rule.allow_ping (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf:100,1-48
2021-10-02T18:33:26.468+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group_rule.allow_ping (expand)
2021-10-02T18:33:26.468+0100 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021-10-02T18:33:26.468+0100 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021-10-02T18:33:26.468+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021-10-02T18:33:26.469+0100 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/aws\"]" provider configuration from main.tf:11,1-15
2021-10-02T18:33:26.469+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
  local.security_groups (expand) - *terraform.nodeExpandLocal
  output.instance_id - *terraform.NodeApplyableOutput
  output.instance_name - *terraform.NodeApplyableOutput
  output.instance_public_ip - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:26.469+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021-10-02T18:33:26.469+0100 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/http"], implied first by data.http.myip (expand)
2021-10-02T18:33:26.469+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
  local.security_groups (expand) - *terraform.nodeExpandLocal
  output.instance_id - *terraform.NodeApplyableOutput
  output.instance_name - *terraform.NodeApplyableOutput
  output.instance_public_ip - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:26.469+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021-10-02T18:33:26.470+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group_rule.allow_localhost_ping (expand)
2021-10-02T18:33:26.470+0100 [DEBUG] ProviderTransformer: "aws_security_group_rule.allow_localhost_ping (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:26.470+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.web_app (expand)
2021-10-02T18:33:26.470+0100 [DEBUG] ProviderTransformer: "aws_instance.web_app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:26.470+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_ami.ubuntu (expand)
2021-10-02T18:33:26.470+0100 [DEBUG] ProviderTransformer: "data.aws_ami.ubuntu (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:26.470+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group_rule.allow_localhost_8080 (expand)
2021-10-02T18:33:26.471+0100 [DEBUG] ProviderTransformer: "aws_security_group_rule.allow_localhost_8080 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:26.471+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group_rule.allow_8080 (expand)
2021-10-02T18:33:26.471+0100 [DEBUG] ProviderTransformer: "aws_security_group_rule.allow_8080 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:26.471+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sg_ping (expand)
2021-10-02T18:33:26.471+0100 [DEBUG] ProviderTransformer: "aws_security_group.sg_ping (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:26.471+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/http"] serving data.http.myip (expand)
2021-10-02T18:33:26.472+0100 [DEBUG] ProviderTransformer: "data.http.myip (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/http"]
2021-10-02T18:33:26.472+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sg_8080 (expand)
2021-10-02T18:33:26.472+0100 [DEBUG] ProviderTransformer: "aws_security_group.sg_8080 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:26.472+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group_rule.allow_ping (expand)
2021-10-02T18:33:26.472+0100 [DEBUG] ProviderTransformer: "aws_security_group_rule.allow_ping (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:26.472+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
  output.instance_id - *terraform.NodeApplyableOutput
  output.instance_name - *terraform.NodeApplyableOutput
  output.instance_public_ip - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:26.472+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021-10-02T18:33:26.473+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021-10-02T18:33:26.473+0100 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
  output.instance_id - *terraform.NodeApplyableOutput
  output.instance_name - *terraform.NodeApplyableOutput
  output.instance_public_ip - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:26.473+0100 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021-10-02T18:33:26.473+0100 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021-10-02T18:33:26.473+0100 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021-10-02T18:33:26.473+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group_rule.allow_localhost_8080 (expand)
2021-10-02T18:33:26.474+0100 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/http"]
2021-10-02T18:33:26.474+0100 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:26.474+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group_rule.allow_localhost_ping (expand)
2021-10-02T18:33:26.474+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.web_app (expand)
2021-10-02T18:33:26.474+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.ubuntu (expand)
2021-10-02T18:33:26.474+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sg_8080 (expand)
2021-10-02T18:33:26.474+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group_rule.allow_ping (expand)
2021-10-02T18:33:26.475+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group_rule.allow_8080 (expand)
2021-10-02T18:33:26.475+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sg_ping (expand)
2021-10-02T18:33:26.475+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to data.http.myip (expand)
2021-10-02T18:33:26.475+0100 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021-10-02T18:33:26.475+0100 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021-10-02T18:33:26.475+0100 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021-10-02T18:33:26.476+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-10-02T18:33:26.476+0100 [DEBUG] ReferenceTransformer: "aws_security_group_rule.allow_localhost_8080 (expand)" references: [aws_security_group.sg_8080 (expand) data.http.myip (expand)]
2021-10-02T18:33:26.476+0100 [DEBUG] ReferenceTransformer: "output.instance_public_ip" references: [aws_instance.web_app (expand)]
2021-10-02T18:33:26.476+0100 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/http\"]" references: []
2021-10-02T18:33:26.476+0100 [DEBUG] ReferenceTransformer: "aws_security_group_rule.allow_localhost_ping (expand)" references: [aws_security_group.sg_ping (expand) data.http.myip (expand)]
2021-10-02T18:33:26.476+0100 [INFO]  ReferenceTransformer: reference not found: "each.value"
2021-10-02T18:33:26.477+0100 [DEBUG] ReferenceTransformer: "aws_instance.web_app (expand)" references: [local.security_groups (expand) var.name data.aws_ami.ubuntu (expand)]
2021-10-02T18:33:26.477+0100 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntu (expand)" references: []
2021-10-02T18:33:26.477+0100 [DEBUG] ReferenceTransformer: "output.instance_name" references: [aws_instance.web_app (expand)]
2021-10-02T18:33:26.477+0100 [DEBUG] ReferenceTransformer: "output.instance_id" references: [aws_instance.web_app (expand)]
2021-10-02T18:33:26.477+0100 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/aws\"]" references: [var.region]
2021-10-02T18:33:26.477+0100 [DEBUG] ReferenceTransformer: "aws_security_group.sg_8080 (expand)" references: []
2021-10-02T18:33:26.478+0100 [DEBUG] ReferenceTransformer: "var.region" references: []
2021-10-02T18:33:26.478+0100 [DEBUG] ReferenceTransformer: "var.name" references: []
2021-10-02T18:33:26.478+0100 [DEBUG] ReferenceTransformer: "aws_security_group_rule.allow_ping (expand)" references: [aws_security_group.sg_ping (expand) aws_security_group.sg_8080 (expand)]
2021-10-02T18:33:26.478+0100 [DEBUG] ReferenceTransformer: "aws_security_group_rule.allow_8080 (expand)" references: [aws_security_group.sg_8080 (expand) aws_security_group.sg_ping (expand)]
2021-10-02T18:33:26.478+0100 [DEBUG] ReferenceTransformer: "aws_security_group.sg_ping (expand)" references: []
2021-10-02T18:33:26.478+0100 [DEBUG] ReferenceTransformer: "data.http.myip (expand)" references: []
2021-10-02T18:33:26.478+0100 [DEBUG] ReferenceTransformer: "local.security_groups (expand)" references: [aws_security_group.sg_ping (expand) aws_security_group.sg_8080 (expand)]
2021-10-02T18:33:26.479+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  output.instance_id - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  output.instance_name - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  output.instance_public_ip - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:26.479+0100 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021-10-02T18:33:26.479+0100 [TRACE] AttachDependenciesTransformer: aws_security_group.sg_8080 depends on []
2021-10-02T18:33:26.479+0100 [TRACE] AttachDependenciesTransformer: aws_security_group_rule.allow_ping depends on [aws_security_group.sg_8080 aws_security_group.sg_ping]
2021-10-02T18:33:26.479+0100 [TRACE] AttachDependenciesTransformer: aws_security_group_rule.allow_8080 depends on [aws_security_group.sg_8080 aws_security_group.sg_ping]
2021-10-02T18:33:26.479+0100 [TRACE] AttachDependenciesTransformer: aws_security_group.sg_ping depends on []
2021-10-02T18:33:26.480+0100 [TRACE] AttachDependenciesTransformer: data.http.myip depends on []
2021-10-02T18:33:26.480+0100 [TRACE] AttachDependenciesTransformer: aws_security_group_rule.allow_localhost_8080 depends on [aws_security_group.sg_8080 data.http.myip]
2021-10-02T18:33:26.480+0100 [TRACE] AttachDependenciesTransformer: aws_security_group_rule.allow_localhost_ping depends on [aws_security_group.sg_ping data.http.myip]
2021-10-02T18:33:26.480+0100 [TRACE] AttachDependenciesTransformer: aws_instance.web_app depends on [aws_security_group.sg_8080 aws_security_group.sg_ping data.aws_ami.ubuntu]
2021-10-02T18:33:26.480+0100 [TRACE] AttachDependenciesTransformer: data.aws_ami.ubuntu depends on []
2021-10-02T18:33:26.480+0100 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021-10-02T18:33:26.481+0100 [TRACE] Executing graph transform *terraform.attachDataResourceDependsOnTransformer
2021-10-02T18:33:26.481+0100 [TRACE] attachDataDependenciesTransformer: data.http.myip depends on []
2021-10-02T18:33:26.481+0100 [TRACE] attachDataDependenciesTransformer: data.aws_ami.ubuntu depends on []
2021-10-02T18:33:26.481+0100 [TRACE] Completed graph transform *terraform.attachDataResourceDependsOnTransformer (no changes)
2021-10-02T18:33:26.481+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-10-02T18:33:26.481+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-10-02T18:33:26.482+0100 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021-10-02T18:33:26.482+0100 [TRACE] ForcedCBDTransformer: "aws_security_group_rule.allow_localhost_8080 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-10-02T18:33:26.482+0100 [TRACE] ForcedCBDTransformer: "aws_security_group_rule.allow_localhost_ping (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-10-02T18:33:26.482+0100 [TRACE] ForcedCBDTransformer: "aws_instance.web_app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-10-02T18:33:26.482+0100 [TRACE] ForcedCBDTransformer: "data.aws_ami.ubuntu (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-10-02T18:33:26.482+0100 [TRACE] ForcedCBDTransformer: "aws_security_group.sg_8080 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-10-02T18:33:26.482+0100 [TRACE] ForcedCBDTransformer: "aws_security_group_rule.allow_ping (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-10-02T18:33:26.483+0100 [TRACE] ForcedCBDTransformer: "aws_security_group_rule.allow_8080 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-10-02T18:33:26.483+0100 [TRACE] ForcedCBDTransformer: "aws_security_group.sg_ping (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-10-02T18:33:26.483+0100 [TRACE] ForcedCBDTransformer: "data.http.myip (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-10-02T18:33:26.483+0100 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021-10-02T18:33:26.483+0100 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021-10-02T18:33:26.483+0100 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    output.instance_id - *terraform.NodeApplyableOutput
    output.instance_name - *terraform.NodeApplyableOutput
    output.instance_public_ip - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.instance_id - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  output.instance_name - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  output.instance_public_ip - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:26.484+0100 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021-10-02T18:33:26.484+0100 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    output.instance_id - *terraform.NodeApplyableOutput
    output.instance_name - *terraform.NodeApplyableOutput
    output.instance_public_ip - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.instance_id - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  output.instance_name - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  output.instance_public_ip - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] (close) - *terraform.graphNodeCloseProvider
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:26.484+0100 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021-10-02T18:33:26.484+0100 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    output.instance_id - *terraform.NodeApplyableOutput
    output.instance_name - *terraform.NodeApplyableOutput
    output.instance_public_ip - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
    var.name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.instance_id - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  output.instance_name - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  output.instance_public_ip - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] (close) - *terraform.graphNodeCloseProvider
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/http"] (close) - *terraform.graphNodeCloseProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:26.484+0100 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021-10-02T18:33:26.485+0100 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    local.security_groups (expand) - *terraform.nodeExpandLocal
    var.name - *terraform.NodeRootVariable
  aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntu (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.http.myip (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  local.security_groups (expand) - *terraform.nodeExpandLocal
    aws_security_group.sg_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sg_ping (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
    output.instance_id - *terraform.NodeApplyableOutput
    output.instance_name - *terraform.NodeApplyableOutput
    output.instance_public_ip - *terraform.NodeApplyableOutput
  output.instance_id - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  output.instance_name - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  output.instance_public_ip - *terraform.NodeApplyableOutput
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_instance.web_app (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_8080 (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_localhost_ping (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group_rule.allow_ping (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/http"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/http"] (close) - *terraform.graphNodeCloseProvider
    data.http.myip (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/http"] (close) - *terraform.graphNodeCloseProvider
  var.name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021-10-02T18:33:26.485+0100 [DEBUG] Starting graph walk: walkPlan
2021-10-02T18:33:26.485+0100 [TRACE] vertex "var.name": starting visit (*terraform.NodeRootVariable)
2021-10-02T18:33:26.485+0100 [TRACE] vertex "var.name": visit complete
2021-10-02T18:33:26.486+0100 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2021-10-02T18:33:26.486+0100 [TRACE] vertex "var.region": visit complete
2021-10-02T18:33:26.486+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/http\"]": starting visit (*terraform.NodeApplyableProvider)
2021-10-02T18:33:26.486+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": starting visit (*terraform.NodeApplyableProvider)
2021-10-02T18:33:26.490+0100 [DEBUG] created provider logger: level=trace
2021-10-02T18:33:26.490+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:33:26.526+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5]
2021-10-02T18:33:26.535+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=8015
2021-10-02T18:33:26.536+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5
2021-10-02T18:33:26.919+0100 [INFO]  provider.terraform-provider-http_v2.1.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:33:26.918+0100
2021-10-02T18:33:26.979+0100 [DEBUG] provider.terraform-provider-http_v2.1.0_x5: plugin address: address=/tmp/plugin138452922 network=unix timestamp=2021-10-02T18:33:26.979+0100
2021-10-02T18:33:26.979+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:33:27.033+0100 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/http\"]" provider for provider["registry.terraform.io/hashicorp/http"]
2021-10-02T18:33:27.033+0100 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/http"]: no configuration at all
2021-10-02T18:33:27.033+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:33:27.033+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-10-02T18:33:27.037+0100 [TRACE] GRPCProvider: ValidateProviderConfig
2021-10-02T18:33:27.039+0100 [DEBUG] created provider logger: level=trace
2021-10-02T18:33:27.040+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:33:27.078+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5]
2021-10-02T18:33:27.087+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8027
2021-10-02T18:33:27.088+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5
2021-10-02T18:33:30.232+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:33:30.227+0100
2021-10-02T18:33:30.295+0100 [DEBUG] provider.terraform-provider-aws_v3.61.0_x5: plugin address: network=unix address=/tmp/plugin891866142 timestamp=2021-10-02T18:33:30.295+0100
2021-10-02T18:33:30.296+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:33:30.356+0100 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/aws\"]" provider for provider["registry.terraform.io/hashicorp/aws"]
2021-10-02T18:33:30.356+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:33:30.357+0100 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/aws"]: using explicit config only
2021-10-02T18:33:30.358+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-10-02T18:33:30.357+0100 [TRACE] GRPCProvider: ConfigureProvider
2021-10-02T18:33:30.366+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/http\"]": visit complete
2021-10-02T18:33:30.366+0100 [TRACE] vertex "data.http.myip (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-10-02T18:33:30.367+0100 [TRACE] vertex "data.http.myip (expand)": expanding dynamic subgraph
2021-10-02T18:33:30.367+0100 [TRACE] vertex "data.http.myip (expand)": entering dynamic subgraph
2021-10-02T18:33:30.367+0100 [TRACE] vertex "data.http.myip": starting visit (*terraform.NodePlannableResource)
2021-10-02T18:33:30.367+0100 [TRACE] vertex "data.http.myip": expanding dynamic subgraph
2021-10-02T18:33:30.368+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-10-02T18:33:30.368+0100 [TRACE] ResourceCountTransformer: adding data.http.myip as *terraform.NodePlannableResourceInstance
2021-10-02T18:33:30.368+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.http.myip - *terraform.NodePlannableResourceInstance
  ------
2021-10-02T18:33:30.368+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-10-02T18:33:30.368+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-10-02T18:33:30.369+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-10-02T18:33:30.369+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-10-02T18:33:30.369+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-10-02T18:33:30.369+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-10-02T18:33:30.372+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-10-02T18:33:30.373+0100 [DEBUG] ReferenceTransformer: "data.http.myip" references: []
2021-10-02T18:33:30.373+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-10-02T18:33:30.374+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-10-02T18:33:30.374+0100 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-10-02T18:33:30.374+0100 [TRACE] vertex "data.http.myip": entering dynamic subgraph
2021-10-02T18:33:30.375+0100 [TRACE] vertex "data.http.myip": starting visit (*terraform.NodePlannableResourceInstance)
2021-10-02T18:33:30.375+0100 [TRACE] readResourceInstanceState: reading state for data.http.myip
2021-10-02T18:33:30.376+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for data.http.myip
2021-10-02T18:33:30.376+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for data.http.myip
2021-10-02T18:33:30.376+0100 [TRACE] readDataSource: Re-validating config for data.http.myip
2021-10-02T18:33:30.377+0100 [TRACE] GRPCProvider: ValidateDataResourceConfig
2021-10-02T18:33:30.378+0100 [TRACE] readDataSource: data.http.myip configuration is complete, so reading from provider
2021-10-02T18:33:30.378+0100 [TRACE] GRPCProvider: ReadDataSource
2021-10-02T18:33:30.428+0100 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/http\"]" produced an unexpected new value for data.http.myip.
      - .response_headers["Cf-Ray"]: was cty.StringVal("697fab183d5b03e2-LIS"), but now cty.StringVal("697fad0dcf1103d2-LIS")
      - .response_headers["Date"]: was cty.StringVal("Sat, 02 Oct 2021 17:32:08 GMT"), but now cty.StringVal("Sat, 02 Oct 2021 17:33:28 GMT")
      - .response_headers["Set-Cookie"]: was cty.StringVal("__cf_bm=CEN4m5xhLmBEOmi6Nlbf5BJ7baQIvEMjwtbRexkzZ2o-1633195928-0-AQoHO6JSSf/vGtLccQEV00EfHE3OQodpmGfHuXCagpQbwVA+0YR5bGceBjuTp+H5JxPQHOp99GJ6pQeDQgGAVVA=; path=/; expires=Sat, 02-Oct-21 18:02:08 GMT; domain=.icanhazip.com; HttpOnly; SameSite=None"), but now cty.StringVal("__cf_bm=oSNSivMvxdBIsFz7RGuxQGRgHjMFkq9WYpMBIV3Pwa4-1633196008-0-AaTovPuyOuGOLslez8MhmDXvNPLHg2yy0W5b0Oce/Dq1IYRNaNH1wKk6mljyWaMsvOlAi7ykwLc6XTS2MaU6uwI=; path=/; expires=Sat, 02-Oct-21 18:03:28 GMT; domain=.icanhazip.com; HttpOnly; SameSite=None")
2021-10-02T18:33:30.429+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for data.http.myip
2021-10-02T18:33:30.429+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for data.http.myip
2021-10-02T18:33:30.429+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for data.http.myip
2021-10-02T18:33:30.429+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for data.http.myip
2021-10-02T18:33:30.430+0100 [TRACE] vertex "data.http.myip": visit complete
2021-10-02T18:33:30.430+0100 [TRACE] vertex "data.http.myip": dynamic subgraph completed successfully
2021-10-02T18:33:30.430+0100 [TRACE] vertex "data.http.myip": visit complete
2021-10-02T18:33:30.430+0100 [TRACE] vertex "data.http.myip (expand)": dynamic subgraph completed successfully
2021-10-02T18:33:30.430+0100 [TRACE] vertex "data.http.myip (expand)": visit complete
2021-10-02T18:33:30.431+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/http\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021-10-02T18:33:30.431+0100 [TRACE] GRPCProvider: Close
2021-10-02T18:33:30.432+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:33:30.434+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=8015
2021-10-02T18:33:30.434+0100 [DEBUG] provider: plugin exited
2021-10-02T18:33:30.434+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/http\"] (close)": visit complete
2021-10-02T18:33:30.516+0100 [TRACE] GRPCProvider: ValidateProviderConfig
2021-10-02T18:33:30.623+0100 [WARN]  ValidateProviderConfig from "provider[\"registry.terraform.io/hashicorp/aws\"]" changed the config value, but that value is unused
2021-10-02T18:33:30.624+0100 [TRACE] GRPCProvider: ConfigureProvider
2021-10-02T18:33:30.637+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:30 [INFO] AWS Auth provider used: "StaticProvider": timestamp=2021-10-02T18:33:30.637+0100
2021-10-02T18:33:30.649+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:30 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-10-02T18:33:30.649+0100
2021-10-02T18:33:31.424+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:31 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-10-02T18:33:31.424+0100
2021-10-02T18:33:31.486+0100 [TRACE] dag/walk: vertex "aws_security_group.sg_ping (expand)" is waiting for "provider[\"registry.terraform.io/hashicorp/aws\"]"
2021-10-02T18:33:31.487+0100 [TRACE] dag/walk: vertex "data.aws_ami.ubuntu (expand)" is waiting for "provider[\"registry.terraform.io/hashicorp/aws\"]"
2021-10-02T18:33:31.487+0100 [TRACE] dag/walk: vertex "output.instance_public_ip" is waiting for "aws_instance.web_app (expand)"
2021-10-02T18:33:31.487+0100 [TRACE] dag/walk: vertex "local.security_groups (expand)" is waiting for "aws_security_group.sg_ping (expand)"
2021-10-02T18:33:31.488+0100 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aws_security_group_rule.allow_localhost_ping (expand)"
2021-10-02T18:33:31.488+0100 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_security_group_rule.allow_ping (expand)"
2021-10-02T18:33:31.489+0100 [TRACE] dag/walk: vertex "aws_security_group_rule.allow_ping (expand)" is waiting for "aws_security_group.sg_ping (expand)"
2021-10-02T18:33:31.489+0100 [TRACE] dag/walk: vertex "output.instance_id" is waiting for "aws_instance.web_app (expand)"
2021-10-02T18:33:31.489+0100 [TRACE] dag/walk: vertex "aws_security_group.sg_8080 (expand)" is waiting for "provider[\"registry.terraform.io/hashicorp/aws\"]"
2021-10-02T18:33:31.490+0100 [TRACE] dag/walk: vertex "aws_security_group_rule.allow_8080 (expand)" is waiting for "aws_security_group.sg_8080 (expand)"
2021-10-02T18:33:31.490+0100 [TRACE] dag/walk: vertex "output.instance_name" is waiting for "aws_instance.web_app (expand)"
2021-10-02T18:33:31.491+0100 [TRACE] dag/walk: vertex "aws_instance.web_app (expand)" is waiting for "local.security_groups (expand)"
2021-10-02T18:33:32.975+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": visit complete
2021-10-02T18:33:32.976+0100 [TRACE] vertex "aws_security_group.sg_ping (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-10-02T18:33:32.977+0100 [TRACE] vertex "aws_security_group.sg_ping (expand)": expanding dynamic subgraph
2021-10-02T18:33:32.978+0100 [TRACE] vertex "aws_security_group.sg_ping (expand)": entering dynamic subgraph
2021-10-02T18:33:32.978+0100 [TRACE] vertex "data.aws_ami.ubuntu (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-10-02T18:33:32.979+0100 [TRACE] vertex "aws_security_group.sg_8080 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-10-02T18:33:32.980+0100 [TRACE] vertex "aws_security_group.sg_ping": starting visit (*terraform.NodePlannableResource)
2021-10-02T18:33:32.981+0100 [TRACE] vertex "data.aws_ami.ubuntu (expand)": expanding dynamic subgraph
2021-10-02T18:33:32.981+0100 [TRACE] vertex "aws_security_group.sg_8080 (expand)": expanding dynamic subgraph
2021-10-02T18:33:32.982+0100 [TRACE] vertex "aws_security_group.sg_ping": expanding dynamic subgraph
2021-10-02T18:33:32.982+0100 [TRACE] vertex "data.aws_ami.ubuntu (expand)": entering dynamic subgraph
2021-10-02T18:33:32.983+0100 [TRACE] vertex "data.aws_ami.ubuntu": starting visit (*terraform.NodePlannableResource)
2021-10-02T18:33:32.984+0100 [TRACE] vertex "aws_security_group.sg_8080 (expand)": entering dynamic subgraph
2021-10-02T18:33:32.984+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-10-02T18:33:32.985+0100 [TRACE] ResourceCountTransformer: adding aws_security_group.sg_ping as *terraform.NodePlannableResourceInstance
2021-10-02T18:33:32.985+0100 [TRACE] vertex "aws_security_group.sg_8080": starting visit (*terraform.NodePlannableResource)
2021-10-02T18:33:32.986+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.sg_ping - *terraform.NodePlannableResourceInstance
  ------
2021-10-02T18:33:32.986+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-10-02T18:33:32.987+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-10-02T18:33:32.987+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-10-02T18:33:32.988+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-10-02T18:33:32.988+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-10-02T18:33:32.989+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-10-02T18:33:32.989+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-10-02T18:33:32.990+0100 [DEBUG] ReferenceTransformer: "aws_security_group.sg_ping" references: []
2021-10-02T18:33:32.990+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-10-02T18:33:32.990+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-10-02T18:33:32.991+0100 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-10-02T18:33:32.991+0100 [TRACE] vertex "aws_security_group.sg_ping": entering dynamic subgraph
2021-10-02T18:33:32.991+0100 [TRACE] vertex "aws_security_group.sg_ping": starting visit (*terraform.NodePlannableResourceInstance)
2021-10-02T18:33:32.992+0100 [TRACE] readResourceInstanceState: reading state for aws_security_group.sg_ping
2021-10-02T18:33:32.992+0100 [TRACE] upgradeResourceState: schema version of aws_security_group.sg_ping is still 1; calling provider "aws" for any other minor fixups
2021-10-02T18:33:32.992+0100 [TRACE] vertex "data.aws_ami.ubuntu": expanding dynamic subgraph
2021-10-02T18:33:32.993+0100 [TRACE] vertex "aws_security_group.sg_8080": expanding dynamic subgraph
2021-10-02T18:33:32.993+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-10-02T18:33:32.993+0100 [TRACE] ResourceCountTransformer: adding data.aws_ami.ubuntu as *terraform.NodePlannableResourceInstance
2021-10-02T18:33:32.994+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_ami.ubuntu - *terraform.NodePlannableResourceInstance
  ------
2021-10-02T18:33:32.992+0100 [TRACE] GRPCProvider: UpgradeResourceState
2021-10-02T18:33:32.994+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-10-02T18:33:32.995+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-10-02T18:33:32.995+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-10-02T18:33:32.995+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-10-02T18:33:32.995+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-10-02T18:33:32.995+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-10-02T18:33:32.996+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-10-02T18:33:32.996+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for aws_security_group.sg_ping
2021-10-02T18:33:32.996+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group.sg_ping
2021-10-02T18:33:32.996+0100 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntu" references: []
2021-10-02T18:33:32.997+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-10-02T18:33:32.997+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-10-02T18:33:32.997+0100 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-10-02T18:33:32.997+0100 [TRACE] vertex "data.aws_ami.ubuntu": entering dynamic subgraph
2021-10-02T18:33:32.997+0100 [TRACE] vertex "data.aws_ami.ubuntu": starting visit (*terraform.NodePlannableResourceInstance)
2021-10-02T18:33:32.998+0100 [TRACE] readResourceInstanceState: reading state for data.aws_ami.ubuntu
2021-10-02T18:33:32.998+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_security_group.sg_ping
2021-10-02T18:33:32.998+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-10-02T18:33:32.998+0100 [TRACE] ResourceCountTransformer: adding aws_security_group.sg_8080 as *terraform.NodePlannableResourceInstance
2021-10-02T18:33:32.998+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.sg_8080 - *terraform.NodePlannableResourceInstance
  ------
2021-10-02T18:33:32.998+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-10-02T18:33:32.998+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-10-02T18:33:32.999+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-10-02T18:33:32.999+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-10-02T18:33:32.999+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-10-02T18:33:32.999+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group.sg_ping
2021-10-02T18:33:32.999+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-10-02T18:33:32.999+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-10-02T18:33:33.000+0100 [DEBUG] ReferenceTransformer: "aws_security_group.sg_8080" references: []
2021-10-02T18:33:33.000+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-10-02T18:33:33.000+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-10-02T18:33:33.000+0100 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-10-02T18:33:33.000+0100 [TRACE] vertex "aws_security_group.sg_8080": entering dynamic subgraph
2021-10-02T18:33:33.001+0100 [TRACE] vertex "aws_security_group.sg_8080": starting visit (*terraform.NodePlannableResourceInstance)
2021-10-02T18:33:33.001+0100 [TRACE] NodeAbstractResourceInstance.refresh for aws_security_group.sg_ping
2021-10-02T18:33:33.001+0100 [TRACE] readResourceInstanceState: reading state for aws_security_group.sg_8080
2021-10-02T18:33:33.001+0100 [TRACE] GRPCProvider: ReadResource
2021-10-02T18:33:33.001+0100 [TRACE] upgradeResourceState: schema version of aws_security_group.sg_8080 is still 1; calling provider "aws" for any other minor fixups
2021-10-02T18:33:33.002+0100 [TRACE] GRPCProvider: UpgradeResourceState
2021-10-02T18:33:33.002+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for data.aws_ami.ubuntu
2021-10-02T18:33:33.002+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for data.aws_ami.ubuntu
2021-10-02T18:33:33.003+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for aws_security_group.sg_8080
2021-10-02T18:33:33.003+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group.sg_8080
2021-10-02T18:33:33.005+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_security_group.sg_8080
2021-10-02T18:33:33.008+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group.sg_8080
2021-10-02T18:33:33.009+0100 [TRACE] readDataSource: Re-validating config for data.aws_ami.ubuntu
2021-10-02T18:33:33.010+0100 [TRACE] GRPCProvider: ValidateDataResourceConfig
2021-10-02T18:33:33.011+0100 [TRACE] NodeAbstractResourceInstance.refresh for aws_security_group.sg_8080
2021-10-02T18:33:33.012+0100 [TRACE] GRPCProvider: ReadResource
2021-10-02T18:33:33.012+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:33 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-10-02T18:33:33.012+0100
2021-10-02T18:33:33.013+0100 [TRACE] readDataSource: data.aws_ami.ubuntu configuration is complete, so reading from provider
2021-10-02T18:33:33.014+0100 [TRACE] GRPCProvider: ReadDataSource
2021-10-02T18:33:33.039+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:33 [DEBUG] Reading AMI: {
  Filters: [{
      Name: "virtualization-type",
      Values: ["hvm"]
    },{
      Name: "name",
      Values: ["ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"]
    }],
  Owners: ["099720109477"]
}: timestamp=2021-10-02T18:33:33.038+0100
2021-10-02T18:33:33.691+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_security_group.sg_ping
2021-10-02T18:33:33.692+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group.sg_ping
2021-10-02T18:33:33.692+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_security_group.sg_8080
2021-10-02T18:33:33.692+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group.sg_8080
2021-10-02T18:33:33.692+0100 [TRACE] Re-validating config for "aws_security_group.sg_ping"
2021-10-02T18:33:33.692+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:33.693+0100 [TRACE] Re-validating config for "aws_security_group.sg_8080"
2021-10-02T18:33:33.693+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:33.693+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-10-02T18:33:33.693+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-10-02T18:33:33.701+0100 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_ping, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2021-10-02T18:33:33.701+0100 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_8080, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2021-10-02T18:33:33.701+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for aws_security_group.sg_ping
2021-10-02T18:33:33.701+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group.sg_ping
2021-10-02T18:33:33.702+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for aws_security_group.sg_8080
2021-10-02T18:33:33.702+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group.sg_8080
2021-10-02T18:33:33.702+0100 [TRACE] writeChange: recorded NoOp change for aws_security_group.sg_ping
2021-10-02T18:33:33.702+0100 [TRACE] vertex "aws_security_group.sg_ping": visit complete
2021-10-02T18:33:33.702+0100 [TRACE] vertex "aws_security_group.sg_ping": dynamic subgraph completed successfully
2021-10-02T18:33:33.703+0100 [TRACE] vertex "aws_security_group.sg_ping": visit complete
2021-10-02T18:33:33.703+0100 [TRACE] vertex "aws_security_group.sg_ping (expand)": dynamic subgraph completed successfully
2021-10-02T18:33:33.703+0100 [TRACE] vertex "aws_security_group.sg_ping (expand)": visit complete
2021-10-02T18:33:33.703+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-10-02T18:33:33.703+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping (expand)": expanding dynamic subgraph
2021-10-02T18:33:33.703+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping (expand)": entering dynamic subgraph
2021-10-02T18:33:33.704+0100 [TRACE] writeChange: recorded NoOp change for aws_security_group.sg_8080
2021-10-02T18:33:33.704+0100 [TRACE] vertex "aws_security_group.sg_8080": visit complete
2021-10-02T18:33:33.704+0100 [TRACE] vertex "aws_security_group.sg_8080": dynamic subgraph completed successfully
2021-10-02T18:33:33.704+0100 [TRACE] vertex "aws_security_group.sg_8080": visit complete
2021-10-02T18:33:33.704+0100 [TRACE] vertex "aws_security_group.sg_8080 (expand)": dynamic subgraph completed successfully
2021-10-02T18:33:33.704+0100 [TRACE] vertex "aws_security_group.sg_8080 (expand)": visit complete
2021-10-02T18:33:33.705+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-10-02T18:33:33.705+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080 (expand)": expanding dynamic subgraph
2021-10-02T18:33:33.705+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping": starting visit (*terraform.NodePlannableResource)
2021-10-02T18:33:33.705+0100 [TRACE] vertex "local.security_groups (expand)": starting visit (*terraform.nodeExpandLocal)
2021-10-02T18:33:33.705+0100 [TRACE] vertex "local.security_groups (expand)": expanding dynamic subgraph
2021-10-02T18:33:33.705+0100 [TRACE] Expanding local: adding local.security_groups as *terraform.NodeLocal
2021-10-02T18:33:33.706+0100 [TRACE] vertex "local.security_groups (expand)": entering dynamic subgraph
2021-10-02T18:33:33.706+0100 [TRACE] vertex "aws_security_group_rule.allow_8080 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-10-02T18:33:33.706+0100 [TRACE] vertex "aws_security_group_rule.allow_ping (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-10-02T18:33:33.706+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080 (expand)": entering dynamic subgraph
2021-10-02T18:33:33.706+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping": expanding dynamic subgraph
2021-10-02T18:33:33.706+0100 [TRACE] vertex "local.security_groups": starting visit (*terraform.NodeLocal)
2021-10-02T18:33:33.707+0100 [TRACE] vertex "aws_security_group_rule.allow_8080 (expand)": expanding dynamic subgraph
2021-10-02T18:33:33.707+0100 [TRACE] vertex "aws_security_group_rule.allow_ping (expand)": expanding dynamic subgraph
2021-10-02T18:33:33.707+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080": starting visit (*terraform.NodePlannableResource)
2021-10-02T18:33:33.707+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-10-02T18:33:33.707+0100 [TRACE] ResourceCountTransformer: adding aws_security_group_rule.allow_localhost_ping as *terraform.NodePlannableResourceInstance
2021-10-02T18:33:33.707+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group_rule.allow_localhost_ping - *terraform.NodePlannableResourceInstance
  ------
2021-10-02T18:33:33.708+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-10-02T18:33:33.708+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-10-02T18:33:33.708+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-10-02T18:33:33.708+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-10-02T18:33:33.709+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-10-02T18:33:33.709+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-10-02T18:33:33.709+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-10-02T18:33:33.709+0100 [DEBUG] ReferenceTransformer: "aws_security_group_rule.allow_localhost_ping" references: []
2021-10-02T18:33:33.710+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-10-02T18:33:33.710+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-10-02T18:33:33.710+0100 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-10-02T18:33:33.710+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping": entering dynamic subgraph
2021-10-02T18:33:33.710+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping": starting visit (*terraform.NodePlannableResourceInstance)
2021-10-02T18:33:33.710+0100 [TRACE] vertex "local.security_groups": visit complete
2021-10-02T18:33:33.711+0100 [TRACE] vertex "local.security_groups (expand)": dynamic subgraph completed successfully
2021-10-02T18:33:33.711+0100 [TRACE] vertex "local.security_groups (expand)": visit complete
2021-10-02T18:33:33.711+0100 [TRACE] vertex "aws_security_group_rule.allow_8080 (expand)": entering dynamic subgraph
2021-10-02T18:33:33.711+0100 [TRACE] vertex "aws_security_group_rule.allow_8080": starting visit (*terraform.NodePlannableResource)
2021-10-02T18:33:33.711+0100 [TRACE] vertex "aws_security_group_rule.allow_8080": expanding dynamic subgraph
2021-10-02T18:33:33.712+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-10-02T18:33:33.712+0100 [TRACE] readResourceInstanceState: reading state for aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:33.712+0100 [TRACE] vertex "aws_security_group_rule.allow_ping (expand)": entering dynamic subgraph
2021-10-02T18:33:33.712+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080": expanding dynamic subgraph
2021-10-02T18:33:33.712+0100 [TRACE] ResourceCountTransformer: adding aws_security_group_rule.allow_8080 as *terraform.NodePlannableResourceInstance
2021-10-02T18:33:33.712+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group_rule.allow_8080 - *terraform.NodePlannableResourceInstance
  ------
2021-10-02T18:33:33.713+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-10-02T18:33:33.713+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-10-02T18:33:33.713+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-10-02T18:33:33.713+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-10-02T18:33:33.713+0100 [TRACE] vertex "aws_security_group_rule.allow_ping": starting visit (*terraform.NodePlannableResource)
2021-10-02T18:33:33.713+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-10-02T18:33:33.714+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-10-02T18:33:33.714+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-10-02T18:33:33.714+0100 [DEBUG] ReferenceTransformer: "aws_security_group_rule.allow_8080" references: []
2021-10-02T18:33:33.714+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-10-02T18:33:33.714+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-10-02T18:33:33.714+0100 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-10-02T18:33:33.715+0100 [TRACE] vertex "aws_security_group_rule.allow_8080": entering dynamic subgraph
2021-10-02T18:33:33.715+0100 [TRACE] vertex "aws_security_group_rule.allow_8080": starting visit (*terraform.NodePlannableResourceInstance)
2021-10-02T18:33:33.715+0100 [TRACE] readResourceInstanceState: reading state for aws_security_group_rule.allow_8080
2021-10-02T18:33:33.715+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-10-02T18:33:33.715+0100 [TRACE] ResourceCountTransformer: adding aws_security_group_rule.allow_localhost_8080 as *terraform.NodePlannableResourceInstance
2021-10-02T18:33:33.715+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group_rule.allow_localhost_8080 - *terraform.NodePlannableResourceInstance
  ------
2021-10-02T18:33:33.716+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-10-02T18:33:33.716+0100 [TRACE] upgradeResourceState: schema version of aws_security_group_rule.allow_localhost_ping is still 2; calling provider "aws" for any other minor fixups
2021-10-02T18:33:33.716+0100 [TRACE] GRPCProvider: UpgradeResourceState
2021-10-02T18:33:33.716+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-10-02T18:33:33.717+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-10-02T18:33:33.717+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-10-02T18:33:33.717+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-10-02T18:33:33.717+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-10-02T18:33:33.718+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-10-02T18:33:33.718+0100 [DEBUG] ReferenceTransformer: "aws_security_group_rule.allow_localhost_8080" references: []
2021-10-02T18:33:33.718+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-10-02T18:33:33.718+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-10-02T18:33:33.718+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:33.718+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:33.719+0100 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-10-02T18:33:33.719+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:33.719+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:33.719+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080": entering dynamic subgraph
2021-10-02T18:33:33.720+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080": starting visit (*terraform.NodePlannableResourceInstance)
2021-10-02T18:33:33.720+0100 [TRACE] readResourceInstanceState: reading state for aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:33.720+0100 [TRACE] upgradeResourceState: schema version of aws_security_group_rule.allow_localhost_8080 is still 2; calling provider "aws" for any other minor fixups
2021-10-02T18:33:33.720+0100 [TRACE] upgradeResourceState: schema version of aws_security_group_rule.allow_8080 is still 2; calling provider "aws" for any other minor fixups
2021-10-02T18:33:33.720+0100 [TRACE] vertex "aws_security_group_rule.allow_ping": expanding dynamic subgraph
2021-10-02T18:33:33.720+0100 [TRACE] NodeAbstractResourceInstance.refresh for aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:33.720+0100 [TRACE] GRPCProvider: UpgradeResourceState
2021-10-02T18:33:33.720+0100 [TRACE] GRPCProvider: UpgradeResourceState
2021-10-02T18:33:33.721+0100 [TRACE] GRPCProvider: ReadResource
2021-10-02T18:33:33.721+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-10-02T18:33:33.722+0100 [TRACE] ResourceCountTransformer: adding aws_security_group_rule.allow_ping as *terraform.NodePlannableResourceInstance
2021-10-02T18:33:33.722+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:33.722+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:33.723+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group_rule.allow_ping - *terraform.NodePlannableResourceInstance
  ------
2021-10-02T18:33:33.723+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-10-02T18:33:33.723+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-10-02T18:33:33.723+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-10-02T18:33:33.723+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for aws_security_group_rule.allow_8080
2021-10-02T18:33:33.724+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:33.724+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-10-02T18:33:33.724+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-10-02T18:33:33.724+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-10-02T18:33:33.724+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-10-02T18:33:33.725+0100 [DEBUG] ReferenceTransformer: "aws_security_group_rule.allow_ping" references: []
2021-10-02T18:33:33.725+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_8080
2021-10-02T18:33:33.725+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:33.725+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-10-02T18:33:33.726+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-10-02T18:33:33.726+0100 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-10-02T18:33:33.726+0100 [TRACE] vertex "aws_security_group_rule.allow_ping": entering dynamic subgraph
2021-10-02T18:33:33.726+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_security_group_rule.allow_8080
2021-10-02T18:33:33.727+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_8080
2021-10-02T18:33:33.727+0100 [TRACE] NodeAbstractResourceInstance.refresh for aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:33.727+0100 [TRACE] vertex "aws_security_group_rule.allow_ping": starting visit (*terraform.NodePlannableResourceInstance)
2021-10-02T18:33:33.727+0100 [TRACE] GRPCProvider: ReadResource
2021-10-02T18:33:33.727+0100 [TRACE] readResourceInstanceState: reading state for aws_security_group_rule.allow_ping
2021-10-02T18:33:33.729+0100 [TRACE] NodeAbstractResourceInstance.refresh for aws_security_group_rule.allow_8080
2021-10-02T18:33:33.730+0100 [TRACE] GRPCProvider: ReadResource
2021-10-02T18:33:33.730+0100 [TRACE] upgradeResourceState: schema version of aws_security_group_rule.allow_ping is still 2; calling provider "aws" for any other minor fixups
2021-10-02T18:33:33.731+0100 [TRACE] GRPCProvider: UpgradeResourceState
2021-10-02T18:33:33.733+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for aws_security_group_rule.allow_ping
2021-10-02T18:33:33.734+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_ping
2021-10-02T18:33:33.734+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_security_group_rule.allow_ping
2021-10-02T18:33:33.735+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_ping
2021-10-02T18:33:33.735+0100 [TRACE] NodeAbstractResourceInstance.refresh for aws_security_group_rule.allow_ping
2021-10-02T18:33:33.736+0100 [TRACE] GRPCProvider: ReadResource
2021-10-02T18:33:33.773+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:33 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sda1 ebs:map[delete_on_termination:true encrypted:false iops:0 snapshot_id:snap-08fac2f6ab541b754 throughput:0 volume_size:8 volume_type:gp2] virtual_name:]: timestamp=2021-10-02T18:33:33.773+0100
2021-10-02T18:33:33.773+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:33 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sdb virtual_name:ephemeral0]: timestamp=2021-10-02T18:33:33.773+0100
2021-10-02T18:33:33.773+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:33 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sdc virtual_name:ephemeral1]: timestamp=2021-10-02T18:33:33.773+0100
2021-10-02T18:33:33.774+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for data.aws_ami.ubuntu
2021-10-02T18:33:33.775+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for data.aws_ami.ubuntu
2021-10-02T18:33:33.775+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for data.aws_ami.ubuntu
2021-10-02T18:33:33.776+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for data.aws_ami.ubuntu
2021-10-02T18:33:33.776+0100 [TRACE] vertex "data.aws_ami.ubuntu": visit complete
2021-10-02T18:33:33.776+0100 [TRACE] vertex "data.aws_ami.ubuntu": dynamic subgraph completed successfully
2021-10-02T18:33:33.777+0100 [TRACE] vertex "data.aws_ami.ubuntu": visit complete
2021-10-02T18:33:33.777+0100 [TRACE] vertex "data.aws_ami.ubuntu (expand)": dynamic subgraph completed successfully
2021-10-02T18:33:33.777+0100 [TRACE] vertex "data.aws_ami.ubuntu (expand)": visit complete
2021-10-02T18:33:33.777+0100 [TRACE] vertex "aws_instance.web_app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-10-02T18:33:33.778+0100 [TRACE] vertex "aws_instance.web_app (expand)": expanding dynamic subgraph
2021-10-02T18:33:33.778+0100 [TRACE] vertex "aws_instance.web_app (expand)": entering dynamic subgraph
2021-10-02T18:33:33.778+0100 [TRACE] vertex "aws_instance.web_app": starting visit (*terraform.NodePlannableResource)
2021-10-02T18:33:33.778+0100 [TRACE] vertex "aws_instance.web_app": expanding dynamic subgraph
2021-10-02T18:33:33.778+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-10-02T18:33:33.779+0100 [TRACE] ResourceCountTransformer: adding aws_instance.web_app["sg_8080"] as *terraform.NodePlannableResourceInstance
2021-10-02T18:33:33.779+0100 [TRACE] ResourceCountTransformer: adding aws_instance.web_app["sg_ping"] as *terraform.NodePlannableResourceInstance
2021-10-02T18:33:33.779+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.web_app["sg_8080"] - *terraform.NodePlannableResourceInstance
  aws_instance.web_app["sg_ping"] - *terraform.NodePlannableResourceInstance
  ------
2021-10-02T18:33:33.779+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-10-02T18:33:33.779+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-10-02T18:33:33.779+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-10-02T18:33:33.780+0100 [DEBUG] Resource instance state not found for node "aws_instance.web_app[\"sg_8080\"]", instance aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.780+0100 [DEBUG] Resource instance state not found for node "aws_instance.web_app[\"sg_ping\"]", instance aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.780+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-10-02T18:33:33.780+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-10-02T18:33:33.781+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-10-02T18:33:33.781+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-10-02T18:33:33.781+0100 [INFO]  ReferenceTransformer: reference not found: "local.security_groups"
2021-10-02T18:33:33.782+0100 [INFO]  ReferenceTransformer: reference not found: "each.value"
2021-10-02T18:33:33.782+0100 [INFO]  ReferenceTransformer: reference not found: "var.name"
2021-10-02T18:33:33.782+0100 [DEBUG] ReferenceTransformer: "aws_instance.web_app[\"sg_8080\"]" references: []
2021-10-02T18:33:33.782+0100 [INFO]  ReferenceTransformer: reference not found: "local.security_groups"
2021-10-02T18:33:33.782+0100 [INFO]  ReferenceTransformer: reference not found: "each.value"
2021-10-02T18:33:33.782+0100 [INFO]  ReferenceTransformer: reference not found: "var.name"
2021-10-02T18:33:33.782+0100 [DEBUG] ReferenceTransformer: "aws_instance.web_app[\"sg_ping\"]" references: []
2021-10-02T18:33:33.783+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-10-02T18:33:33.783+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-10-02T18:33:33.783+0100 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_instance.web_app["sg_8080"] - *terraform.NodePlannableResourceInstance
  aws_instance.web_app["sg_ping"] - *terraform.NodePlannableResourceInstance
  root - terraform.graphNodeRoot
    aws_instance.web_app["sg_8080"] - *terraform.NodePlannableResourceInstance
    aws_instance.web_app["sg_ping"] - *terraform.NodePlannableResourceInstance
  ------
2021-10-02T18:33:33.783+0100 [TRACE] vertex "aws_instance.web_app": entering dynamic subgraph
2021-10-02T18:33:33.783+0100 [TRACE] vertex "aws_instance.web_app[\"sg_8080\"]": starting visit (*terraform.NodePlannableResourceInstance)
2021-10-02T18:33:33.784+0100 [TRACE] readResourceInstanceState: reading state for aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.784+0100 [TRACE] readResourceInstanceState: no state present for aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.784+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.784+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: removing state object for aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.784+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.784+0100 [TRACE] vertex "aws_instance.web_app[\"sg_ping\"]": starting visit (*terraform.NodePlannableResourceInstance)
2021-10-02T18:33:33.785+0100 [TRACE] readResourceInstanceState: reading state for aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.785+0100 [TRACE] readResourceInstanceState: no state present for aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.785+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.785+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: removing state object for aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.785+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.786+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: removing state object for aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.786+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: removing state object for aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.786+0100 [TRACE] NodeAbstractResourceInstance.refresh for aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.786+0100 [DEBUG] refresh: aws_instance.web_app["sg_8080"]: no state, so not refreshing
2021-10-02T18:33:33.786+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.787+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: removing state object for aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.787+0100 [TRACE] NodeAbstractResourceInstance.refresh for aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.787+0100 [DEBUG] refresh: aws_instance.web_app["sg_ping"]: no state, so not refreshing
2021-10-02T18:33:33.787+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.787+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: removing state object for aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.788+0100 [TRACE] Re-validating config for "aws_instance.web_app[\"sg_8080\"]"
2021-10-02T18:33:33.788+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:33.788+0100 [TRACE] Re-validating config for "aws_instance.web_app[\"sg_ping\"]"
2021-10-02T18:33:33.789+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:33.789+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-10-02T18:33:33.789+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:33 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-10-02T18:33:33.789+0100
2021-10-02T18:33:33.790+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:33 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-10-02T18:33:33.790+0100
2021-10-02T18:33:33.790+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-10-02T18:33:33.802+0100 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.web_app["sg_ping"], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data: planned value cty.StringVal("67e34b406ab639a606a64fe06965b26bf8036a9c") does not match config value cty.StringVal("#!/bin/bash\r\necho \"Hello, World\" > index.html\r\nnohup busybox httpd -f -p 8080 &\r\n")
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021-10-02T18:33:33.803+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.803+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.804+0100 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.web_app["sg_8080"], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data: planned value cty.StringVal("67e34b406ab639a606a64fe06965b26bf8036a9c") does not match config value cty.StringVal("#!/bin/bash\r\necho \"Hello, World\" > index.html\r\nnohup busybox httpd -f -p 8080 &\r\n")
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021-10-02T18:33:33.804+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.805+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.805+0100 [TRACE] writeChange: recorded Create change for aws_instance.web_app["sg_ping"]
2021-10-02T18:33:33.806+0100 [TRACE] vertex "aws_instance.web_app[\"sg_ping\"]": visit complete
2021-10-02T18:33:33.806+0100 [TRACE] writeChange: recorded Create change for aws_instance.web_app["sg_8080"]
2021-10-02T18:33:33.806+0100 [TRACE] vertex "aws_instance.web_app[\"sg_8080\"]": visit complete
2021-10-02T18:33:33.807+0100 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021-10-02T18:33:33.807+0100 [TRACE] vertex "root": visit complete
2021-10-02T18:33:33.807+0100 [TRACE] vertex "aws_instance.web_app": dynamic subgraph completed successfully
2021-10-02T18:33:33.808+0100 [TRACE] vertex "aws_instance.web_app": visit complete
2021-10-02T18:33:33.808+0100 [TRACE] vertex "aws_instance.web_app (expand)": dynamic subgraph completed successfully
2021-10-02T18:33:33.808+0100 [TRACE] vertex "aws_instance.web_app (expand)": visit complete
2021-10-02T18:33:33.808+0100 [TRACE] vertex "output.instance_public_ip": starting visit (*terraform.NodeApplyableOutput)
2021-10-02T18:33:33.809+0100 [TRACE] vertex "output.instance_name": starting visit (*terraform.NodeApplyableOutput)
2021-10-02T18:33:33.809+0100 [TRACE] vertex "output.instance_id": starting visit (*terraform.NodeApplyableOutput)
2021-10-02T18:33:33.810+0100 [TRACE] setValue: Saving Create change for output.instance_public_ip in changeset
2021-10-02T18:33:33.810+0100 [TRACE] setValue: Saving value for output.instance_public_ip in state
2021-10-02T18:33:33.811+0100 [TRACE] vertex "output.instance_public_ip": visit complete
2021-10-02T18:33:33.811+0100 [TRACE] setValue: Saving NoOp change for output.instance_name in changeset
2021-10-02T18:33:33.812+0100 [TRACE] setValue: Saving Create change for output.instance_id in changeset
2021-10-02T18:33:33.812+0100 [TRACE] setValue: Saving value for output.instance_id in state
2021-10-02T18:33:33.812+0100 [TRACE] vertex "output.instance_id": visit complete
2021-10-02T18:33:33.813+0100 [TRACE] setValue: Saving value for output.instance_name in state
2021-10-02T18:33:33.813+0100 [TRACE] setValue: Saving NoOp change for output.instance_name in changeset
2021-10-02T18:33:33.813+0100 [TRACE] setValue: Saving value for output.instance_name in state
2021-10-02T18:33:33.814+0100 [TRACE] vertex "output.instance_name": visit complete
2021-10-02T18:33:34.365+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:34 [DEBUG] Rules [{
  FromPort: -1,
  IpProtocol: "icmp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: -1,
  UserIdGroupPairs: [{
      GroupId: "sg-0c188e5bd50fcceb2",
      UserId: "286520813378"
    }]
}]: timestamp=2021-10-02T18:33:34.365+0100
2021-10-02T18:33:34.366+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:34 [DEBUG] Found rule for Security Group Rule (sgrule-660324999): {
  FromPort: -1,
  IpProtocol: "icmp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: -1,
  UserIdGroupPairs: [{
      GroupId: "sg-0c188e5bd50fcceb2",
      UserId: "286520813378"
    }]
}: timestamp=2021-10-02T18:33:34.365+0100
2021-10-02T18:33:34.368+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:34.369+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:34.372+0100 [TRACE] Re-validating config for "aws_security_group_rule.allow_localhost_ping"
2021-10-02T18:33:34.373+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:34.375+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:34 [DEBUG] Rules [{
  FromPort: 80,
  IpProtocol: "tcp",
  ToPort: 80,
  UserIdGroupPairs: [{
      GroupId: "sg-0e6225de04ff9af4e",
      UserId: "286520813378"
    }]
} {
  FromPort: 8080,
  IpProtocol: "tcp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: 8080
}]: timestamp=2021-10-02T18:33:34.374+0100
2021-10-02T18:33:34.376+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:34 [DEBUG] Found rule for Security Group Rule (sgrule-65624750): {
  FromPort: 8080,
  IpProtocol: "tcp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: 8080
}: timestamp=2021-10-02T18:33:34.374+0100
2021-10-02T18:33:34.376+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:34.377+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:34.377+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:34 [DEBUG] Rules [{
  FromPort: 80,
  IpProtocol: "tcp",
  ToPort: 80,
  UserIdGroupPairs: [{
      GroupId: "sg-0e6225de04ff9af4e",
      UserId: "286520813378"
    }]
} {
  FromPort: 8080,
  IpProtocol: "tcp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: 8080
}]: timestamp=2021-10-02T18:33:34.377+0100
2021-10-02T18:33:34.378+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:34 [DEBUG] Found rule for Security Group Rule (sgrule-506695827): {
  FromPort: 80,
  IpProtocol: "tcp",
  ToPort: 80,
  UserIdGroupPairs: [{
      GroupId: "sg-0e6225de04ff9af4e",
      UserId: "286520813378"
    }]
}: timestamp=2021-10-02T18:33:34.377+0100
2021-10-02T18:33:34.378+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_security_group_rule.allow_8080
2021-10-02T18:33:34.380+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_8080
2021-10-02T18:33:34.381+0100 [TRACE] Re-validating config for "aws_security_group_rule.allow_localhost_8080"
2021-10-02T18:33:34.381+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:34.381+0100 [TRACE] Re-validating config for "aws_security_group_rule.allow_8080"
2021-10-02T18:33:34.382+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:34.382+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-10-02T18:33:34.383+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-10-02T18:33:34.384+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-10-02T18:33:34.385+0100 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group_rule.allow_localhost_8080, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("") for a non-computed attribute
      - .prefix_list_ids: planned value cty.ListValEmpty(cty.String) for a non-computed attribute
      - .ipv6_cidr_blocks: planned value cty.ListValEmpty(cty.String) for a non-computed attribute
      - .self: planned value cty.False for a non-computed attribute
2021-10-02T18:33:34.386+0100 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group_rule.allow_8080, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("") for a non-computed attribute
      - .prefix_list_ids: planned value cty.ListValEmpty(cty.String) for a non-computed attribute
      - .self: planned value cty.False for a non-computed attribute
      - .cidr_blocks: planned value cty.ListValEmpty(cty.String) for a non-computed attribute
      - .ipv6_cidr_blocks: planned value cty.ListValEmpty(cty.String) for a non-computed attribute
2021-10-02T18:33:34.386+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for aws_security_group_rule.allow_8080
2021-10-02T18:33:34.387+0100 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group_rule.allow_localhost_ping, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ipv6_cidr_blocks: planned value cty.ListValEmpty(cty.String) for a non-computed attribute
      - .self: planned value cty.False for a non-computed attribute
      - .prefix_list_ids: planned value cty.ListValEmpty(cty.String) for a non-computed attribute
      - .description: planned value cty.StringVal("") for a non-computed attribute
2021-10-02T18:33:34.387+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:34.387+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_8080
2021-10-02T18:33:34.388+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:34.388+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:34.389+0100 [TRACE] writeChange: recorded NoOp change for aws_security_group_rule.allow_localhost_ping
2021-10-02T18:33:34.389+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:34.390+0100 [TRACE] writeChange: recorded NoOp change for aws_security_group_rule.allow_8080
2021-10-02T18:33:34.390+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping": visit complete
2021-10-02T18:33:34.390+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping": dynamic subgraph completed successfully
2021-10-02T18:33:34.391+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping": visit complete
2021-10-02T18:33:34.391+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping (expand)": dynamic subgraph completed successfully
2021-10-02T18:33:34.391+0100 [TRACE] writeChange: recorded NoOp change for aws_security_group_rule.allow_localhost_8080
2021-10-02T18:33:34.391+0100 [TRACE] vertex "aws_security_group_rule.allow_8080": visit complete
2021-10-02T18:33:34.392+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_ping (expand)": visit complete
2021-10-02T18:33:34.392+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080": visit complete
2021-10-02T18:33:34.392+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080": dynamic subgraph completed successfully
2021-10-02T18:33:34.392+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080": visit complete
2021-10-02T18:33:34.392+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080 (expand)": dynamic subgraph completed successfully
2021-10-02T18:33:34.393+0100 [TRACE] vertex "aws_security_group_rule.allow_localhost_8080 (expand)": visit complete
2021-10-02T18:33:34.393+0100 [TRACE] vertex "aws_security_group_rule.allow_8080": dynamic subgraph completed successfully
2021-10-02T18:33:34.393+0100 [TRACE] vertex "aws_security_group_rule.allow_8080": visit complete
2021-10-02T18:33:34.393+0100 [TRACE] vertex "aws_security_group_rule.allow_8080 (expand)": dynamic subgraph completed successfully
2021-10-02T18:33:34.393+0100 [TRACE] vertex "aws_security_group_rule.allow_8080 (expand)": visit complete
2021-10-02T18:33:34.395+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:34 [DEBUG] Rules [{
  FromPort: -1,
  IpProtocol: "icmp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: -1,
  UserIdGroupPairs: [{
      GroupId: "sg-0c188e5bd50fcceb2",
      UserId: "286520813378"
    }]
}]: timestamp=2021-10-02T18:33:34.395+0100
2021-10-02T18:33:34.395+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:33:34 [DEBUG] Found rule for Security Group Rule (sgrule-1334369795): {
  FromPort: -1,
  IpProtocol: "icmp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: -1,
  UserIdGroupPairs: [{
      GroupId: "sg-0c188e5bd50fcceb2",
      UserId: "286520813378"
    }]
}: timestamp=2021-10-02T18:33:34.395+0100
2021-10-02T18:33:34.395+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for aws_security_group_rule.allow_ping
2021-10-02T18:33:34.395+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_ping
2021-10-02T18:33:34.396+0100 [TRACE] Re-validating config for "aws_security_group_rule.allow_ping"
2021-10-02T18:33:34.396+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-10-02T18:33:34.397+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-10-02T18:33:34.398+0100 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group_rule.allow_ping, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("") for a non-computed attribute
      - .prefix_list_ids: planned value cty.ListValEmpty(cty.String) for a non-computed attribute
      - .ipv6_cidr_blocks: planned value cty.ListValEmpty(cty.String) for a non-computed attribute
      - .self: planned value cty.False for a non-computed attribute
      - .cidr_blocks: planned value cty.ListValEmpty(cty.String) for a non-computed attribute
2021-10-02T18:33:34.398+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for aws_security_group_rule.allow_ping
2021-10-02T18:33:34.399+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for aws_security_group_rule.allow_ping
2021-10-02T18:33:34.399+0100 [TRACE] writeChange: recorded NoOp change for aws_security_group_rule.allow_ping
2021-10-02T18:33:34.399+0100 [TRACE] vertex "aws_security_group_rule.allow_ping": visit complete
2021-10-02T18:33:34.399+0100 [TRACE] vertex "aws_security_group_rule.allow_ping": dynamic subgraph completed successfully
2021-10-02T18:33:34.399+0100 [TRACE] vertex "aws_security_group_rule.allow_ping": visit complete
2021-10-02T18:33:34.399+0100 [TRACE] vertex "aws_security_group_rule.allow_ping (expand)": dynamic subgraph completed successfully
2021-10-02T18:33:34.400+0100 [TRACE] vertex "aws_security_group_rule.allow_ping (expand)": visit complete
2021-10-02T18:33:34.400+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021-10-02T18:33:34.400+0100 [TRACE] GRPCProvider: Close
2021-10-02T18:33:34.400+0100 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021-10-02T18:33:34.400+0100 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-10-02T18:33:34.401+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:33:34.411+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8027
2021-10-02T18:33:34.412+0100 [DEBUG] provider: plugin exited
2021-10-02T18:33:34.412+0100 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": visit complete
2021-10-02T18:33:34.413+0100 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021-10-02T18:33:34.413+0100 [TRACE] vertex "root": visit complete
2021-10-02T18:33:34.413+0100 [INFO]  backend/local: refresh calling Refresh
2021-10-02T18:33:34.414+0100 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021-10-02T18:33:34.418+0100 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 25
2021-10-02T18:33:34.419+0100 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021-10-02T18:33:34.468+0100 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021-10-02T18:33:34.470+0100 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021-10-02T18:34:57.079+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:34:57.119+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5]
2021-10-02T18:34:57.128+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8069
2021-10-02T18:34:57.128+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5
2021-10-02T18:35:00.265+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:35:00.258+0100
2021-10-02T18:35:00.336+0100 [DEBUG] provider.terraform-provider-aws_v3.61.0_x5: plugin address: address=/tmp/plugin069497272 network=unix timestamp=2021-10-02T18:35:00.336+0100
2021-10-02T18:35:00.336+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:35:00.393+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:35:00.548+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:35:00.558+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8069
2021-10-02T18:35:00.558+0100 [DEBUG] provider: plugin exited
2021-10-02T18:35:00.565+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:35:00.600+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5]
2021-10-02T18:35:00.609+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=8082
2021-10-02T18:35:00.609+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5
2021-10-02T18:35:01.033+0100 [INFO]  provider.terraform-provider-http_v2.1.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:35:01.033+0100
2021-10-02T18:35:01.093+0100 [DEBUG] provider.terraform-provider-http_v2.1.0_x5: plugin address: network=unix address=/tmp/plugin188456089 timestamp=2021-10-02T18:35:01.093+0100
2021-10-02T18:35:01.094+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:35:01.149+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:35:01.151+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:35:01.155+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=8082
2021-10-02T18:35:01.155+0100 [DEBUG] provider: plugin exited
2021-10-02T18:35:01.167+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:35:01.203+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5]
2021-10-02T18:35:01.211+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=8095
2021-10-02T18:35:01.211+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5
2021-10-02T18:35:01.592+0100 [INFO]  provider.terraform-provider-http_v2.1.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:35:01.592+0100
2021-10-02T18:35:01.659+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:35:01.659+0100 [DEBUG] provider.terraform-provider-http_v2.1.0_x5: plugin address: address=/tmp/plugin258346902 network=unix timestamp=2021-10-02T18:35:01.659+0100
2021-10-02T18:35:01.716+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:35:01.721+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:35:01.760+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5]
2021-10-02T18:35:01.770+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8108
2021-10-02T18:35:01.770+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5
2021-10-02T18:35:04.692+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:35:04.688+0100
2021-10-02T18:35:04.770+0100 [DEBUG] provider.terraform-provider-aws_v3.61.0_x5: plugin address: address=/tmp/plugin979553451 network=unix timestamp=2021-10-02T18:35:04.770+0100
2021-10-02T18:35:04.771+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:35:04.828+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:35:04.829+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:35:04.833+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=8095
2021-10-02T18:35:04.834+0100 [DEBUG] provider: plugin exited
2021-10-02T18:35:05.091+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-10-02T18:35:05.091+0100
2021-10-02T18:35:05.093+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:35:05.104+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8108
2021-10-02T18:35:05.105+0100 [DEBUG] provider: plugin exited
2021-10-02T18:35:05.113+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:35:05.151+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5]
2021-10-02T18:35:05.161+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8121
2021-10-02T18:35:05.161+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5
2021-10-02T18:35:08.086+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:35:08.082+0100
2021-10-02T18:35:08.177+0100 [DEBUG] provider.terraform-provider-aws_v3.61.0_x5: plugin address: address=/tmp/plugin142372152 network=unix timestamp=2021-10-02T18:35:08.177+0100
2021-10-02T18:35:08.178+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:35:08.234+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:35:08.242+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:35:08.291+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5]
2021-10-02T18:35:08.297+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=8134
2021-10-02T18:35:08.297+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5
2021-10-02T18:35:08.753+0100 [INFO]  provider.terraform-provider-http_v2.1.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:35:08.753+0100
2021-10-02T18:35:08.809+0100 [DEBUG] provider.terraform-provider-http_v2.1.0_x5: plugin address: address=/tmp/plugin257159489 network=unix timestamp=2021-10-02T18:35:08.809+0100
2021-10-02T18:35:08.810+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:35:08.866+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:35:08.924+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:08 [INFO] AWS Auth provider used: "StaticProvider": timestamp=2021-10-02T18:35:08.924+0100
2021-10-02T18:35:08.944+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:08 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-10-02T18:35:08.944+0100
2021-10-02T18:35:08.959+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:35:08.962+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=8134
2021-10-02T18:35:08.962+0100 [DEBUG] provider: plugin exited
2021-10-02T18:35:09.745+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:09 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-10-02T18:35:09.745+0100
2021-10-02T18:35:11.322+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:11 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-10-02T18:35:11.322+0100
2021-10-02T18:35:11.377+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:11 [DEBUG] Reading AMI: {
  Filters: [{
      Name: "virtualization-type",
      Values: ["hvm"]
    },{
      Name: "name",
      Values: ["ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"]
    }],
  Owners: ["099720109477"]
}: timestamp=2021-10-02T18:35:11.377+0100
2021-10-02T18:35:12.077+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sda1 ebs:map[delete_on_termination:true encrypted:false iops:0 snapshot_id:snap-08fac2f6ab541b754 throughput:0 volume_size:8 volume_type:gp2] virtual_name:]: timestamp=2021-10-02T18:35:12.077+0100
2021-10-02T18:35:12.077+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sdb virtual_name:ephemeral0]: timestamp=2021-10-02T18:35:12.077+0100
2021-10-02T18:35:12.078+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sdc virtual_name:ephemeral1]: timestamp=2021-10-02T18:35:12.077+0100
2021-10-02T18:35:12.087+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-10-02T18:35:12.087+0100
2021-10-02T18:35:12.088+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-10-02T18:35:12.087+0100
2021-10-02T18:35:12.694+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [DEBUG] Rules [{
  FromPort: 80,
  IpProtocol: "tcp",
  ToPort: 80,
  UserIdGroupPairs: [{
      GroupId: "sg-0e6225de04ff9af4e",
      UserId: "286520813378"
    }]
} {
  FromPort: 8080,
  IpProtocol: "tcp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: 8080
}]: timestamp=2021-10-02T18:35:12.693+0100
2021-10-02T18:35:12.694+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [DEBUG] Rules [{
  FromPort: -1,
  IpProtocol: "icmp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: -1,
  UserIdGroupPairs: [{
      GroupId: "sg-0c188e5bd50fcceb2",
      UserId: "286520813378"
    }]
}]: timestamp=2021-10-02T18:35:12.693+0100
2021-10-02T18:35:12.694+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [DEBUG] Found rule for Security Group Rule (sgrule-1334369795): {
  FromPort: -1,
  IpProtocol: "icmp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: -1,
  UserIdGroupPairs: [{
      GroupId: "sg-0c188e5bd50fcceb2",
      UserId: "286520813378"
    }]
}: timestamp=2021-10-02T18:35:12.694+0100
2021-10-02T18:35:12.695+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [DEBUG] Found rule for Security Group Rule (sgrule-65624750): {
  FromPort: 8080,
  IpProtocol: "tcp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: 8080
}: timestamp=2021-10-02T18:35:12.694+0100
2021-10-02T18:35:12.695+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [DEBUG] Rules [{
  FromPort: 80,
  IpProtocol: "tcp",
  ToPort: 80,
  UserIdGroupPairs: [{
      GroupId: "sg-0e6225de04ff9af4e",
      UserId: "286520813378"
    }]
} {
  FromPort: 8080,
  IpProtocol: "tcp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: 8080
}]: timestamp=2021-10-02T18:35:12.694+0100
2021-10-02T18:35:12.695+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [DEBUG] Found rule for Security Group Rule (sgrule-506695827): {
  FromPort: 80,
  IpProtocol: "tcp",
  ToPort: 80,
  UserIdGroupPairs: [{
      GroupId: "sg-0e6225de04ff9af4e",
      UserId: "286520813378"
    }]
}: timestamp=2021-10-02T18:35:12.694+0100
2021-10-02T18:35:12.705+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [DEBUG] Rules [{
  FromPort: -1,
  IpProtocol: "icmp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: -1,
  UserIdGroupPairs: [{
      GroupId: "sg-0c188e5bd50fcceb2",
      UserId: "286520813378"
    }]
}]: timestamp=2021-10-02T18:35:12.704+0100
2021-10-02T18:35:12.705+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:12 [DEBUG] Found rule for Security Group Rule (sgrule-660324999): {
  FromPort: -1,
  IpProtocol: "icmp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: -1,
  UserIdGroupPairs: [{
      GroupId: "sg-0c188e5bd50fcceb2",
      UserId: "286520813378"
    }]
}: timestamp=2021-10-02T18:35:12.704+0100
2021-10-02T18:35:12.708+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:35:12.718+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8121
2021-10-02T18:35:12.718+0100 [DEBUG] provider: plugin exited
2021-10-02T18:35:12.724+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:35:12.761+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5]
2021-10-02T18:35:12.771+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=8147
2021-10-02T18:35:12.771+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5
2021-10-02T18:35:13.200+0100 [INFO]  provider.terraform-provider-http_v2.1.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:35:13.200+0100
2021-10-02T18:35:13.263+0100 [DEBUG] provider.terraform-provider-http_v2.1.0_x5: plugin address: address=/tmp/plugin084320910 network=unix timestamp=2021-10-02T18:35:13.263+0100
2021-10-02T18:35:13.263+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:35:13.319+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:35:13.325+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:35:13.362+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5]
2021-10-02T18:35:13.370+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8160
2021-10-02T18:35:13.370+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5
2021-10-02T18:35:16.445+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:35:16.440+0100
2021-10-02T18:35:16.519+0100 [DEBUG] provider.terraform-provider-aws_v3.61.0_x5: plugin address: network=unix address=/tmp/plugin953824803 timestamp=2021-10-02T18:35:16.518+0100
2021-10-02T18:35:16.519+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:35:16.576+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:35:16.723+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:35:16.725+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/http/2.1.0/linux_amd64/terraform-provider-http_v2.1.0_x5 pid=8147
2021-10-02T18:35:16.726+0100 [DEBUG] provider: plugin exited
2021-10-02T18:35:16.727+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:35:16.737+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8160
2021-10-02T18:35:16.738+0100 [DEBUG] provider: plugin exited
2021-10-02T18:35:21.604+0100 [INFO]  provider: configuring client automatic mTLS
2021-10-02T18:35:21.645+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5]
2021-10-02T18:35:21.657+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8174
2021-10-02T18:35:21.657+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5
2021-10-02T18:35:24.913+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: configuring server automatic mTLS: timestamp=2021-10-02T18:35:24.909+0100
2021-10-02T18:35:24.989+0100 [DEBUG] provider.terraform-provider-aws_v3.61.0_x5: plugin address: address=/tmp/plugin233507881 network=unix timestamp=2021-10-02T18:35:24.989+0100
2021-10-02T18:35:24.989+0100 [DEBUG] provider: using plugin: version=5
2021-10-02T18:35:25.059+0100 [TRACE] provider.stdio: waiting for stdio data
2021-10-02T18:35:25.328+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:25 [INFO] AWS Auth provider used: "StaticProvider": timestamp=2021-10-02T18:35:25.328+0100
2021-10-02T18:35:25.341+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:25 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-10-02T18:35:25.341+0100
2021-10-02T18:35:25.947+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:25 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-10-02T18:35:25.947+0100
2021-10-02T18:35:27.347+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:27 [DEBUG] Locking "sg-0e6225de04ff9af4e": timestamp=2021-10-02T18:35:27.346+0100
2021-10-02T18:35:27.347+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:27 [DEBUG] Locked "sg-0e6225de04ff9af4e": timestamp=2021-10-02T18:35:27.346+0100
2021-10-02T18:35:27.347+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:27 [DEBUG] Locking "sg-0c188e5bd50fcceb2": timestamp=2021-10-02T18:35:27.347+0100
2021-10-02T18:35:27.347+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:27 [DEBUG] Locked "sg-0c188e5bd50fcceb2": timestamp=2021-10-02T18:35:27.347+0100
2021-10-02T18:35:27.348+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:27 [DEBUG] Locking "sg-0c188e5bd50fcceb2": timestamp=2021-10-02T18:35:27.347+0100
2021-10-02T18:35:27.348+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:27 [DEBUG] Locking "sg-0e6225de04ff9af4e": timestamp=2021-10-02T18:35:27.347+0100
2021-10-02T18:35:28.013+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:28 [DEBUG] Revoking rule (ingress) from security group sg-0c188e5bd50fcceb2:
{
  FromPort: 80,
  IpProtocol: "tcp",
  ToPort: 80,
  UserIdGroupPairs: [{
      GroupId: "sg-0e6225de04ff9af4e",
      UserId: ""
    }]
}: timestamp=2021-10-02T18:35:28.013+0100
2021-10-02T18:35:28.013+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:28 [DEBUG] Revoking rule (ingress) from security group sg-0e6225de04ff9af4e:
{
  FromPort: -1,
  IpProtocol: "icmp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: -1
}: timestamp=2021-10-02T18:35:28.013+0100
2021-10-02T18:35:28.716+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:28 [DEBUG] Unlocking "sg-0e6225de04ff9af4e": timestamp=2021-10-02T18:35:28.715+0100
2021-10-02T18:35:28.717+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:28 [DEBUG] Unlocked "sg-0e6225de04ff9af4e": timestamp=2021-10-02T18:35:28.716+0100
2021-10-02T18:35:28.718+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:28 [DEBUG] Locked "sg-0e6225de04ff9af4e": timestamp=2021-10-02T18:35:28.716+0100
2021-10-02T18:35:28.742+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:28 [DEBUG] Unlocking "sg-0c188e5bd50fcceb2": timestamp=2021-10-02T18:35:28.742+0100
2021-10-02T18:35:28.743+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:28 [DEBUG] Unlocked "sg-0c188e5bd50fcceb2": timestamp=2021-10-02T18:35:28.742+0100
2021-10-02T18:35:28.744+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:28 [DEBUG] Locked "sg-0c188e5bd50fcceb2": timestamp=2021-10-02T18:35:28.742+0100
2021-10-02T18:35:29.434+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:29 [DEBUG] Revoking rule (ingress) from security group sg-0e6225de04ff9af4e:
{
  FromPort: -1,
  IpProtocol: "icmp",
  ToPort: -1,
  UserIdGroupPairs: [{
      GroupId: "sg-0c188e5bd50fcceb2",
      UserId: ""
    }]
}: timestamp=2021-10-02T18:35:29.433+0100
2021-10-02T18:35:29.440+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:29 [DEBUG] Revoking rule (ingress) from security group sg-0c188e5bd50fcceb2:
{
  FromPort: 8080,
  IpProtocol: "tcp",
  IpRanges: [{
      CidrIp: "193.137.168.32/32"
    }],
  ToPort: 8080
}: timestamp=2021-10-02T18:35:29.440+0100
2021-10-02T18:35:30.133+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:30 [DEBUG] Unlocking "sg-0c188e5bd50fcceb2": timestamp=2021-10-02T18:35:30.133+0100
2021-10-02T18:35:30.133+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:30 [DEBUG] Unlocked "sg-0c188e5bd50fcceb2": timestamp=2021-10-02T18:35:30.133+0100
2021-10-02T18:35:30.142+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:30 [DEBUG] Unlocking "sg-0e6225de04ff9af4e": timestamp=2021-10-02T18:35:30.142+0100
2021-10-02T18:35:30.143+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:30 [DEBUG] Unlocked "sg-0e6225de04ff9af4e": timestamp=2021-10-02T18:35:30.142+0100
2021-10-02T18:35:30.369+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:30 [DEBUG] Security Group destroy: sg-0e6225de04ff9af4e: timestamp=2021-10-02T18:35:30.369+0100
2021-10-02T18:35:30.370+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:30 [DEBUG] Security Group destroy: sg-0c188e5bd50fcceb2: timestamp=2021-10-02T18:35:30.369+0100
2021-10-02T18:35:30.986+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:30 [DEBUG] Waiting for state to become: [success]: timestamp=2021-10-02T18:35:30.986+0100
2021-10-02T18:35:31.011+0100 [INFO]  provider.terraform-provider-aws_v3.61.0_x5: 2021/10/02 18:35:31 [DEBUG] Waiting for state to become: [success]: timestamp=2021-10-02T18:35:31.011+0100
2021-10-02T18:35:32.012+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-10-02T18:35:32.033+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.61.0/linux_amd64/terraform-provider-aws_v3.61.0_x5 pid=8174
2021-10-02T18:35:32.033+0100 [DEBUG] provider: plugin exited
